{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "AzureCNINetworkMonitorImageURL": {
      "defaultValue": "",
      "metadata": {
        "description": "Azure CNI networkmonitor Image URL"
      },
      "type": "string"
    },
    "akeapipoolCount": {
      "defaultValue": 2,
      "metadata": {
        "description": "The number of vms in agent pool akeapipool"
      },
      "type": "int"
    },
    "akeapipoolVMSize": {
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A10",
        "Standard_A11",
        "Standard_A1_v2",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_B12ms",
        "Standard_B16ms",
        "Standard_B1ls",
        "Standard_B1ms",
        "Standard_B1s",
        "Standard_B20ms",
        "Standard_B2ms",
        "Standard_B2s",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_D1",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D16_v3",
        "Standard_D16_v4",
        "Standard_D16a_v3",
        "Standard_D16a_v4",
        "Standard_D16as_v3",
        "Standard_D16as_v4",
        "Standard_D16d_v4",
        "Standard_D16ds_v4",
        "Standard_D16s_v3",
        "Standard_D16s_v4",
        "Standard_D1_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D2_v3",
        "Standard_D2_v4",
        "Standard_D2a_v3",
        "Standard_D2a_v4",
        "Standard_D2as_v3",
        "Standard_D2as_v4",
        "Standard_D2d_v4",
        "Standard_D2ds_v4",
        "Standard_D2s_v3",
        "Standard_D2s_v4",
        "Standard_D3",
        "Standard_D32_v3",
        "Standard_D32_v4",
        "Standard_D32a_v3",
        "Standard_D32a_v4",
        "Standard_D32as_v3",
        "Standard_D32as_v4",
        "Standard_D32d_v4",
        "Standard_D32ds_v4",
        "Standard_D32s_v3",
        "Standard_D32s_v4",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D48_v3",
        "Standard_D48_v4",
        "Standard_D48a_v3",
        "Standard_D48a_v4",
        "Standard_D48as_v3",
        "Standard_D48as_v4",
        "Standard_D48d_v4",
        "Standard_D48ds_v4",
        "Standard_D48s_v3",
        "Standard_D48s_v4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D4_v3",
        "Standard_D4_v4",
        "Standard_D4a_v3",
        "Standard_D4a_v4",
        "Standard_D4as_v3",
        "Standard_D4as_v4",
        "Standard_D4d_v4",
        "Standard_D4ds_v4",
        "Standard_D4s_v3",
        "Standard_D4s_v4",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_D64_v3",
        "Standard_D64_v4",
        "Standard_D64a_v3",
        "Standard_D64a_v4",
        "Standard_D64as_v3",
        "Standard_D64as_v4",
        "Standard_D64d_v4",
        "Standard_D64ds_v4",
        "Standard_D64s_v3",
        "Standard_D64s_v4",
        "Standard_D8_v3",
        "Standard_D8_v4",
        "Standard_D8a_v3",
        "Standard_D8a_v4",
        "Standard_D8as_v3",
        "Standard_D8as_v4",
        "Standard_D8d_v4",
        "Standard_D8ds_v4",
        "Standard_D8s_v3",
        "Standard_D8s_v4",
        "Standard_D96a_v3",
        "Standard_D96a_v4",
        "Standard_D96as_v3",
        "Standard_D96as_v4",
        "Standard_DC1s_v2",
        "Standard_DC2s",
        "Standard_DC2s_v2",
        "Standard_DC4s",
        "Standard_DC4s_v2",
        "Standard_DC8_v2",
        "Standard_DC8s",
        "Standard_DS1",
        "Standard_DS11",
        "Standard_DS11-1_v2",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12-1_v2",
        "Standard_DS12-2_v2",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13-2_v2",
        "Standard_DS13-4_v2",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14-4_v2",
        "Standard_DS14-8_v2",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS1_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_E16-4ds_v4",
        "Standard_E16-4s_v3",
        "Standard_E16-4s_v4",
        "Standard_E16-8ds_v4",
        "Standard_E16-8s_v3",
        "Standard_E16-8s_v4",
        "Standard_E16_v3",
        "Standard_E16_v4",
        "Standard_E16a_v3",
        "Standard_E16a_v4",
        "Standard_E16as_v3",
        "Standard_E16as_v4",
        "Standard_E16d_v4",
        "Standard_E16ds_v4",
        "Standard_E16s_v3",
        "Standard_E16s_v4",
        "Standard_E20_v3",
        "Standard_E20_v4",
        "Standard_E20a_v4",
        "Standard_E20as_v4",
        "Standard_E20d_v4",
        "Standard_E20ds_v4",
        "Standard_E20s_v3",
        "Standard_E20s_v4",
        "Standard_E2_v3",
        "Standard_E2_v4",
        "Standard_E2a_v3",
        "Standard_E2a_v4",
        "Standard_E2as_v3",
        "Standard_E2as_v4",
        "Standard_E2d_v4",
        "Standard_E2ds_v4",
        "Standard_E2s_v3",
        "Standard_E2s_v4",
        "Standard_E32-16ds_v4",
        "Standard_E32-16s_v3",
        "Standard_E32-16s_v4",
        "Standard_E32-8ds_v4",
        "Standard_E32-8s_v3",
        "Standard_E32-8s_v4",
        "Standard_E32_v3",
        "Standard_E32_v4",
        "Standard_E32a_v3",
        "Standard_E32a_v4",
        "Standard_E32as_v3",
        "Standard_E32as_v4",
        "Standard_E32d_v4",
        "Standard_E32ds_v4",
        "Standard_E32s_v3",
        "Standard_E32s_v4",
        "Standard_E4-2ds_v4",
        "Standard_E4-2s_v3",
        "Standard_E4-2s_v4",
        "Standard_E48_v3",
        "Standard_E48_v4",
        "Standard_E48a_v3",
        "Standard_E48a_v4",
        "Standard_E48as_v3",
        "Standard_E48as_v4",
        "Standard_E48d_v4",
        "Standard_E48ds_v4",
        "Standard_E48s_v3",
        "Standard_E48s_v4",
        "Standard_E4_v3",
        "Standard_E4_v4",
        "Standard_E4a_v3",
        "Standard_E4a_v4",
        "Standard_E4as_v3",
        "Standard_E4as_v4",
        "Standard_E4d_v4",
        "Standard_E4ds_v4",
        "Standard_E4s_v3",
        "Standard_E4s_v4",
        "Standard_E64-16ds_v4",
        "Standard_E64-16s_v3",
        "Standard_E64-16s_v4",
        "Standard_E64-32ds_v4",
        "Standard_E64-32s_v3",
        "Standard_E64-32s_v4",
        "Standard_E64_v3",
        "Standard_E64_v4",
        "Standard_E64a_v3",
        "Standard_E64a_v4",
        "Standard_E64as_v3",
        "Standard_E64as_v4",
        "Standard_E64d_v4",
        "Standard_E64ds_v4",
        "Standard_E64i_v3",
        "Standard_E64is_v3",
        "Standard_E64s_v3",
        "Standard_E64s_v4",
        "Standard_E8-2ds_v4",
        "Standard_E8-2s_v3",
        "Standard_E8-2s_v4",
        "Standard_E8-4ds_v4",
        "Standard_E8-4s_v3",
        "Standard_E8-4s_v4",
        "Standard_E8_v3",
        "Standard_E8_v4",
        "Standard_E8a_v3",
        "Standard_E8a_v4",
        "Standard_E8as_v3",
        "Standard_E8as_v4",
        "Standard_E8d_v4",
        "Standard_E8ds_v4",
        "Standard_E8s_v3",
        "Standard_E8s_v4",
        "Standard_E96a_v4",
        "Standard_E96as_v4",
        "Standard_F1",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F16s_v2",
        "Standard_F1s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F2s_v2",
        "Standard_F32s_v2",
        "Standard_F4",
        "Standard_F48s_v2",
        "Standard_F4s",
        "Standard_F4s_v2",
        "Standard_F64s_v2",
        "Standard_F72s_v2",
        "Standard_F8",
        "Standard_F8s",
        "Standard_F8s_v2",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4-4",
        "Standard_GS4-8",
        "Standard_GS5",
        "Standard_GS5-16",
        "Standard_GS5-8",
        "Standard_H16",
        "Standard_H16_Promo",
        "Standard_H16m",
        "Standard_H16m_Promo",
        "Standard_H16mr",
        "Standard_H16mr_Promo",
        "Standard_H16r",
        "Standard_H16r_Promo",
        "Standard_H8",
        "Standard_H8_Promo",
        "Standard_H8m",
        "Standard_H8m_Promo",
        "Standard_HB120rs_v2",
        "Standard_HB60rs",
        "Standard_HC44rs",
        "Standard_L16s",
        "Standard_L16s_v2",
        "Standard_L32s",
        "Standard_L32s_v2",
        "Standard_L48s_v2",
        "Standard_L4s",
        "Standard_L64s_v2",
        "Standard_L80s_v2",
        "Standard_L8s",
        "Standard_L8s_v2",
        "Standard_LRS",
        "Standard_M128",
        "Standard_M128-32ms",
        "Standard_M128-64ms",
        "Standard_M128m",
        "Standard_M128ms",
        "Standard_M128s",
        "Standard_M16-4ms",
        "Standard_M16-8ms",
        "Standard_M16ms",
        "Standard_M192ms_v2",
        "Standard_M192s_v2",
        "Standard_M208ms_v2",
        "Standard_M208s_v2",
        "Standard_M24ms_v2",
        "Standard_M24s_v2",
        "Standard_M32-16ms",
        "Standard_M32-8ms",
        "Standard_M32ls",
        "Standard_M32ms",
        "Standard_M32ts",
        "Standard_M416-208ms_v2",
        "Standard_M416-208s_v2",
        "Standard_M416ms_v2",
        "Standard_M416s_v2",
        "Standard_M48ms_v2",
        "Standard_M48s_v2",
        "Standard_M64",
        "Standard_M64-16ms",
        "Standard_M64-32ms",
        "Standard_M64ls",
        "Standard_M64m",
        "Standard_M64ms",
        "Standard_M64s",
        "Standard_M8-2ms",
        "Standard_M8-4ms",
        "Standard_M8ms",
        "Standard_M96ms_v2",
        "Standard_M96s_v2",
        "Standard_NC12",
        "Standard_NC12_Promo",
        "Standard_NC12s_v2",
        "Standard_NC12s_v3",
        "Standard_NC24",
        "Standard_NC24_Promo",
        "Standard_NC24r",
        "Standard_NC24r_Promo",
        "Standard_NC24rs_v2",
        "Standard_NC24rs_v3",
        "Standard_NC24s_v2",
        "Standard_NC24s_v3",
        "Standard_NC6",
        "Standard_NC6_Promo",
        "Standard_NC6s_v2",
        "Standard_NC6s_v3",
        "Standard_ND12s",
        "Standard_ND24rs",
        "Standard_ND24s",
        "Standard_ND40rs_v2",
        "Standard_ND40s_v3",
        "Standard_ND6s",
        "Standard_NP10s",
        "Standard_NP20s",
        "Standard_NP40s",
        "Standard_NV12",
        "Standard_NV12_Promo",
        "Standard_NV12s_v2",
        "Standard_NV12s_v3",
        "Standard_NV16as_v4",
        "Standard_NV24",
        "Standard_NV24_Promo",
        "Standard_NV24s_v2",
        "Standard_NV24s_v3",
        "Standard_NV32as_v4",
        "Standard_NV48s_v3",
        "Standard_NV4as_v4",
        "Standard_NV6",
        "Standard_NV6_Promo",
        "Standard_NV6s_v2",
        "Standard_NV8as_v4",
        "Standard_PB12s",
        "Standard_PB24s",
        "Standard_PB6s",
        "Standard_ZRS"
      ],
      "defaultValue": "Standard_DS2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "akeapipoolVnetSubnetID": {
      "metadata": {
        "description": "Sets the vnet subnet of agent pool 'akeapipool'."
      },
      "type": "string"
    },
    "akeapipoolosImageName": {
      "defaultValue": "",
      "metadata": {
        "description": "Name of a Linux OS image. Needs to be used in conjuction with osImageResourceGroup."
      },
      "type": "string"
    },
    "akeapipoolosImageOffer": {
      "defaultValue": "UbuntuServer",
      "metadata": {
        "description": "Linux OS image type."
      },
      "type": "string"
    },
    "akeapipoolosImagePublisher": {
      "defaultValue": "Canonical",
      "metadata": {
        "description": "OS image publisher."
      },
      "type": "string"
    },
    "akeapipoolosImageResourceGroup": {
      "defaultValue": "",
      "metadata": {
        "description": "Resource group of a Linux OS image. Needs to be used in conjuction with osImageName."
      },
      "type": "string"
    },
    "akeapipoolosImageSKU": {
      "defaultValue": "16.04-LTS",
      "metadata": {
        "description": "OS image SKU."
      },
      "type": "string"
    },
    "akeapipoolosImageVersion": {
      "defaultValue": "latest",
      "metadata": {
        "description": "OS image version."
      },
      "type": "string"
    },
    "akeiotpoolCount": {
      "defaultValue": 2,
      "metadata": {
        "description": "The number of vms in agent pool akeiotpool"
      },
      "type": "int"
    },
    "akeiotpoolVMSize": {
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A10",
        "Standard_A11",
        "Standard_A1_v2",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_B12ms",
        "Standard_B16ms",
        "Standard_B1ls",
        "Standard_B1ms",
        "Standard_B1s",
        "Standard_B20ms",
        "Standard_B2ms",
        "Standard_B2s",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_D1",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D16_v3",
        "Standard_D16_v4",
        "Standard_D16a_v3",
        "Standard_D16a_v4",
        "Standard_D16as_v3",
        "Standard_D16as_v4",
        "Standard_D16d_v4",
        "Standard_D16ds_v4",
        "Standard_D16s_v3",
        "Standard_D16s_v4",
        "Standard_D1_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D2_v3",
        "Standard_D2_v4",
        "Standard_D2a_v3",
        "Standard_D2a_v4",
        "Standard_D2as_v3",
        "Standard_D2as_v4",
        "Standard_D2d_v4",
        "Standard_D2ds_v4",
        "Standard_D2s_v3",
        "Standard_D2s_v4",
        "Standard_D3",
        "Standard_D32_v3",
        "Standard_D32_v4",
        "Standard_D32a_v3",
        "Standard_D32a_v4",
        "Standard_D32as_v3",
        "Standard_D32as_v4",
        "Standard_D32d_v4",
        "Standard_D32ds_v4",
        "Standard_D32s_v3",
        "Standard_D32s_v4",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D48_v3",
        "Standard_D48_v4",
        "Standard_D48a_v3",
        "Standard_D48a_v4",
        "Standard_D48as_v3",
        "Standard_D48as_v4",
        "Standard_D48d_v4",
        "Standard_D48ds_v4",
        "Standard_D48s_v3",
        "Standard_D48s_v4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D4_v3",
        "Standard_D4_v4",
        "Standard_D4a_v3",
        "Standard_D4a_v4",
        "Standard_D4as_v3",
        "Standard_D4as_v4",
        "Standard_D4d_v4",
        "Standard_D4ds_v4",
        "Standard_D4s_v3",
        "Standard_D4s_v4",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_D64_v3",
        "Standard_D64_v4",
        "Standard_D64a_v3",
        "Standard_D64a_v4",
        "Standard_D64as_v3",
        "Standard_D64as_v4",
        "Standard_D64d_v4",
        "Standard_D64ds_v4",
        "Standard_D64s_v3",
        "Standard_D64s_v4",
        "Standard_D8_v3",
        "Standard_D8_v4",
        "Standard_D8a_v3",
        "Standard_D8a_v4",
        "Standard_D8as_v3",
        "Standard_D8as_v4",
        "Standard_D8d_v4",
        "Standard_D8ds_v4",
        "Standard_D8s_v3",
        "Standard_D8s_v4",
        "Standard_D96a_v3",
        "Standard_D96a_v4",
        "Standard_D96as_v3",
        "Standard_D96as_v4",
        "Standard_DC1s_v2",
        "Standard_DC2s",
        "Standard_DC2s_v2",
        "Standard_DC4s",
        "Standard_DC4s_v2",
        "Standard_DC8_v2",
        "Standard_DC8s",
        "Standard_DS1",
        "Standard_DS11",
        "Standard_DS11-1_v2",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12-1_v2",
        "Standard_DS12-2_v2",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13-2_v2",
        "Standard_DS13-4_v2",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14-4_v2",
        "Standard_DS14-8_v2",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS1_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_E16-4ds_v4",
        "Standard_E16-4s_v3",
        "Standard_E16-4s_v4",
        "Standard_E16-8ds_v4",
        "Standard_E16-8s_v3",
        "Standard_E16-8s_v4",
        "Standard_E16_v3",
        "Standard_E16_v4",
        "Standard_E16a_v3",
        "Standard_E16a_v4",
        "Standard_E16as_v3",
        "Standard_E16as_v4",
        "Standard_E16d_v4",
        "Standard_E16ds_v4",
        "Standard_E16s_v3",
        "Standard_E16s_v4",
        "Standard_E20_v3",
        "Standard_E20_v4",
        "Standard_E20a_v4",
        "Standard_E20as_v4",
        "Standard_E20d_v4",
        "Standard_E20ds_v4",
        "Standard_E20s_v3",
        "Standard_E20s_v4",
        "Standard_E2_v3",
        "Standard_E2_v4",
        "Standard_E2a_v3",
        "Standard_E2a_v4",
        "Standard_E2as_v3",
        "Standard_E2as_v4",
        "Standard_E2d_v4",
        "Standard_E2ds_v4",
        "Standard_E2s_v3",
        "Standard_E2s_v4",
        "Standard_E32-16ds_v4",
        "Standard_E32-16s_v3",
        "Standard_E32-16s_v4",
        "Standard_E32-8ds_v4",
        "Standard_E32-8s_v3",
        "Standard_E32-8s_v4",
        "Standard_E32_v3",
        "Standard_E32_v4",
        "Standard_E32a_v3",
        "Standard_E32a_v4",
        "Standard_E32as_v3",
        "Standard_E32as_v4",
        "Standard_E32d_v4",
        "Standard_E32ds_v4",
        "Standard_E32s_v3",
        "Standard_E32s_v4",
        "Standard_E4-2ds_v4",
        "Standard_E4-2s_v3",
        "Standard_E4-2s_v4",
        "Standard_E48_v3",
        "Standard_E48_v4",
        "Standard_E48a_v3",
        "Standard_E48a_v4",
        "Standard_E48as_v3",
        "Standard_E48as_v4",
        "Standard_E48d_v4",
        "Standard_E48ds_v4",
        "Standard_E48s_v3",
        "Standard_E48s_v4",
        "Standard_E4_v3",
        "Standard_E4_v4",
        "Standard_E4a_v3",
        "Standard_E4a_v4",
        "Standard_E4as_v3",
        "Standard_E4as_v4",
        "Standard_E4d_v4",
        "Standard_E4ds_v4",
        "Standard_E4s_v3",
        "Standard_E4s_v4",
        "Standard_E64-16ds_v4",
        "Standard_E64-16s_v3",
        "Standard_E64-16s_v4",
        "Standard_E64-32ds_v4",
        "Standard_E64-32s_v3",
        "Standard_E64-32s_v4",
        "Standard_E64_v3",
        "Standard_E64_v4",
        "Standard_E64a_v3",
        "Standard_E64a_v4",
        "Standard_E64as_v3",
        "Standard_E64as_v4",
        "Standard_E64d_v4",
        "Standard_E64ds_v4",
        "Standard_E64i_v3",
        "Standard_E64is_v3",
        "Standard_E64s_v3",
        "Standard_E64s_v4",
        "Standard_E8-2ds_v4",
        "Standard_E8-2s_v3",
        "Standard_E8-2s_v4",
        "Standard_E8-4ds_v4",
        "Standard_E8-4s_v3",
        "Standard_E8-4s_v4",
        "Standard_E8_v3",
        "Standard_E8_v4",
        "Standard_E8a_v3",
        "Standard_E8a_v4",
        "Standard_E8as_v3",
        "Standard_E8as_v4",
        "Standard_E8d_v4",
        "Standard_E8ds_v4",
        "Standard_E8s_v3",
        "Standard_E8s_v4",
        "Standard_E96a_v4",
        "Standard_E96as_v4",
        "Standard_F1",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F16s_v2",
        "Standard_F1s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F2s_v2",
        "Standard_F32s_v2",
        "Standard_F4",
        "Standard_F48s_v2",
        "Standard_F4s",
        "Standard_F4s_v2",
        "Standard_F64s_v2",
        "Standard_F72s_v2",
        "Standard_F8",
        "Standard_F8s",
        "Standard_F8s_v2",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4-4",
        "Standard_GS4-8",
        "Standard_GS5",
        "Standard_GS5-16",
        "Standard_GS5-8",
        "Standard_H16",
        "Standard_H16_Promo",
        "Standard_H16m",
        "Standard_H16m_Promo",
        "Standard_H16mr",
        "Standard_H16mr_Promo",
        "Standard_H16r",
        "Standard_H16r_Promo",
        "Standard_H8",
        "Standard_H8_Promo",
        "Standard_H8m",
        "Standard_H8m_Promo",
        "Standard_HB120rs_v2",
        "Standard_HB60rs",
        "Standard_HC44rs",
        "Standard_L16s",
        "Standard_L16s_v2",
        "Standard_L32s",
        "Standard_L32s_v2",
        "Standard_L48s_v2",
        "Standard_L4s",
        "Standard_L64s_v2",
        "Standard_L80s_v2",
        "Standard_L8s",
        "Standard_L8s_v2",
        "Standard_LRS",
        "Standard_M128",
        "Standard_M128-32ms",
        "Standard_M128-64ms",
        "Standard_M128m",
        "Standard_M128ms",
        "Standard_M128s",
        "Standard_M16-4ms",
        "Standard_M16-8ms",
        "Standard_M16ms",
        "Standard_M192ms_v2",
        "Standard_M192s_v2",
        "Standard_M208ms_v2",
        "Standard_M208s_v2",
        "Standard_M24ms_v2",
        "Standard_M24s_v2",
        "Standard_M32-16ms",
        "Standard_M32-8ms",
        "Standard_M32ls",
        "Standard_M32ms",
        "Standard_M32ts",
        "Standard_M416-208ms_v2",
        "Standard_M416-208s_v2",
        "Standard_M416ms_v2",
        "Standard_M416s_v2",
        "Standard_M48ms_v2",
        "Standard_M48s_v2",
        "Standard_M64",
        "Standard_M64-16ms",
        "Standard_M64-32ms",
        "Standard_M64ls",
        "Standard_M64m",
        "Standard_M64ms",
        "Standard_M64s",
        "Standard_M8-2ms",
        "Standard_M8-4ms",
        "Standard_M8ms",
        "Standard_M96ms_v2",
        "Standard_M96s_v2",
        "Standard_NC12",
        "Standard_NC12_Promo",
        "Standard_NC12s_v2",
        "Standard_NC12s_v3",
        "Standard_NC24",
        "Standard_NC24_Promo",
        "Standard_NC24r",
        "Standard_NC24r_Promo",
        "Standard_NC24rs_v2",
        "Standard_NC24rs_v3",
        "Standard_NC24s_v2",
        "Standard_NC24s_v3",
        "Standard_NC6",
        "Standard_NC6_Promo",
        "Standard_NC6s_v2",
        "Standard_NC6s_v3",
        "Standard_ND12s",
        "Standard_ND24rs",
        "Standard_ND24s",
        "Standard_ND40rs_v2",
        "Standard_ND40s_v3",
        "Standard_ND6s",
        "Standard_NP10s",
        "Standard_NP20s",
        "Standard_NP40s",
        "Standard_NV12",
        "Standard_NV12_Promo",
        "Standard_NV12s_v2",
        "Standard_NV12s_v3",
        "Standard_NV16as_v4",
        "Standard_NV24",
        "Standard_NV24_Promo",
        "Standard_NV24s_v2",
        "Standard_NV24s_v3",
        "Standard_NV32as_v4",
        "Standard_NV48s_v3",
        "Standard_NV4as_v4",
        "Standard_NV6",
        "Standard_NV6_Promo",
        "Standard_NV6s_v2",
        "Standard_NV8as_v4",
        "Standard_PB12s",
        "Standard_PB24s",
        "Standard_PB6s",
        "Standard_ZRS"
      ],
      "defaultValue": "Standard_DS2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "akeiotpoolVnetSubnetID": {
      "metadata": {
        "description": "Sets the vnet subnet of agent pool 'akeiotpool'."
      },
      "type": "string"
    },
    "akeiotpoolosImageName": {
      "defaultValue": "",
      "metadata": {
        "description": "Name of a Linux OS image. Needs to be used in conjuction with osImageResourceGroup."
      },
      "type": "string"
    },
    "akeiotpoolosImageOffer": {
      "defaultValue": "UbuntuServer",
      "metadata": {
        "description": "Linux OS image type."
      },
      "type": "string"
    },
    "akeiotpoolosImagePublisher": {
      "defaultValue": "Canonical",
      "metadata": {
        "description": "OS image publisher."
      },
      "type": "string"
    },
    "akeiotpoolosImageResourceGroup": {
      "defaultValue": "",
      "metadata": {
        "description": "Resource group of a Linux OS image. Needs to be used in conjuction with osImageName."
      },
      "type": "string"
    },
    "akeiotpoolosImageSKU": {
      "defaultValue": "16.04-LTS",
      "metadata": {
        "description": "OS image SKU."
      },
      "type": "string"
    },
    "akeiotpoolosImageVersion": {
      "defaultValue": "latest",
      "metadata": {
        "description": "OS image version."
      },
      "type": "string"
    },
    "akesyspoolCount": {
      "defaultValue": 2,
      "metadata": {
        "description": "The number of vms in agent pool akesyspool"
      },
      "type": "int"
    },
    "akesyspoolVMSize": {
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A10",
        "Standard_A11",
        "Standard_A1_v2",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_B12ms",
        "Standard_B16ms",
        "Standard_B1ls",
        "Standard_B1ms",
        "Standard_B1s",
        "Standard_B20ms",
        "Standard_B2ms",
        "Standard_B2s",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_D1",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D16_v3",
        "Standard_D16_v4",
        "Standard_D16a_v3",
        "Standard_D16a_v4",
        "Standard_D16as_v3",
        "Standard_D16as_v4",
        "Standard_D16d_v4",
        "Standard_D16ds_v4",
        "Standard_D16s_v3",
        "Standard_D16s_v4",
        "Standard_D1_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D2_v3",
        "Standard_D2_v4",
        "Standard_D2a_v3",
        "Standard_D2a_v4",
        "Standard_D2as_v3",
        "Standard_D2as_v4",
        "Standard_D2d_v4",
        "Standard_D2ds_v4",
        "Standard_D2s_v3",
        "Standard_D2s_v4",
        "Standard_D3",
        "Standard_D32_v3",
        "Standard_D32_v4",
        "Standard_D32a_v3",
        "Standard_D32a_v4",
        "Standard_D32as_v3",
        "Standard_D32as_v4",
        "Standard_D32d_v4",
        "Standard_D32ds_v4",
        "Standard_D32s_v3",
        "Standard_D32s_v4",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D48_v3",
        "Standard_D48_v4",
        "Standard_D48a_v3",
        "Standard_D48a_v4",
        "Standard_D48as_v3",
        "Standard_D48as_v4",
        "Standard_D48d_v4",
        "Standard_D48ds_v4",
        "Standard_D48s_v3",
        "Standard_D48s_v4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D4_v3",
        "Standard_D4_v4",
        "Standard_D4a_v3",
        "Standard_D4a_v4",
        "Standard_D4as_v3",
        "Standard_D4as_v4",
        "Standard_D4d_v4",
        "Standard_D4ds_v4",
        "Standard_D4s_v3",
        "Standard_D4s_v4",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_D64_v3",
        "Standard_D64_v4",
        "Standard_D64a_v3",
        "Standard_D64a_v4",
        "Standard_D64as_v3",
        "Standard_D64as_v4",
        "Standard_D64d_v4",
        "Standard_D64ds_v4",
        "Standard_D64s_v3",
        "Standard_D64s_v4",
        "Standard_D8_v3",
        "Standard_D8_v4",
        "Standard_D8a_v3",
        "Standard_D8a_v4",
        "Standard_D8as_v3",
        "Standard_D8as_v4",
        "Standard_D8d_v4",
        "Standard_D8ds_v4",
        "Standard_D8s_v3",
        "Standard_D8s_v4",
        "Standard_D96a_v3",
        "Standard_D96a_v4",
        "Standard_D96as_v3",
        "Standard_D96as_v4",
        "Standard_DC1s_v2",
        "Standard_DC2s",
        "Standard_DC2s_v2",
        "Standard_DC4s",
        "Standard_DC4s_v2",
        "Standard_DC8_v2",
        "Standard_DC8s",
        "Standard_DS1",
        "Standard_DS11",
        "Standard_DS11-1_v2",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12-1_v2",
        "Standard_DS12-2_v2",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13-2_v2",
        "Standard_DS13-4_v2",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14-4_v2",
        "Standard_DS14-8_v2",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS1_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_E16-4ds_v4",
        "Standard_E16-4s_v3",
        "Standard_E16-4s_v4",
        "Standard_E16-8ds_v4",
        "Standard_E16-8s_v3",
        "Standard_E16-8s_v4",
        "Standard_E16_v3",
        "Standard_E16_v4",
        "Standard_E16a_v3",
        "Standard_E16a_v4",
        "Standard_E16as_v3",
        "Standard_E16as_v4",
        "Standard_E16d_v4",
        "Standard_E16ds_v4",
        "Standard_E16s_v3",
        "Standard_E16s_v4",
        "Standard_E20_v3",
        "Standard_E20_v4",
        "Standard_E20a_v4",
        "Standard_E20as_v4",
        "Standard_E20d_v4",
        "Standard_E20ds_v4",
        "Standard_E20s_v3",
        "Standard_E20s_v4",
        "Standard_E2_v3",
        "Standard_E2_v4",
        "Standard_E2a_v3",
        "Standard_E2a_v4",
        "Standard_E2as_v3",
        "Standard_E2as_v4",
        "Standard_E2d_v4",
        "Standard_E2ds_v4",
        "Standard_E2s_v3",
        "Standard_E2s_v4",
        "Standard_E32-16ds_v4",
        "Standard_E32-16s_v3",
        "Standard_E32-16s_v4",
        "Standard_E32-8ds_v4",
        "Standard_E32-8s_v3",
        "Standard_E32-8s_v4",
        "Standard_E32_v3",
        "Standard_E32_v4",
        "Standard_E32a_v3",
        "Standard_E32a_v4",
        "Standard_E32as_v3",
        "Standard_E32as_v4",
        "Standard_E32d_v4",
        "Standard_E32ds_v4",
        "Standard_E32s_v3",
        "Standard_E32s_v4",
        "Standard_E4-2ds_v4",
        "Standard_E4-2s_v3",
        "Standard_E4-2s_v4",
        "Standard_E48_v3",
        "Standard_E48_v4",
        "Standard_E48a_v3",
        "Standard_E48a_v4",
        "Standard_E48as_v3",
        "Standard_E48as_v4",
        "Standard_E48d_v4",
        "Standard_E48ds_v4",
        "Standard_E48s_v3",
        "Standard_E48s_v4",
        "Standard_E4_v3",
        "Standard_E4_v4",
        "Standard_E4a_v3",
        "Standard_E4a_v4",
        "Standard_E4as_v3",
        "Standard_E4as_v4",
        "Standard_E4d_v4",
        "Standard_E4ds_v4",
        "Standard_E4s_v3",
        "Standard_E4s_v4",
        "Standard_E64-16ds_v4",
        "Standard_E64-16s_v3",
        "Standard_E64-16s_v4",
        "Standard_E64-32ds_v4",
        "Standard_E64-32s_v3",
        "Standard_E64-32s_v4",
        "Standard_E64_v3",
        "Standard_E64_v4",
        "Standard_E64a_v3",
        "Standard_E64a_v4",
        "Standard_E64as_v3",
        "Standard_E64as_v4",
        "Standard_E64d_v4",
        "Standard_E64ds_v4",
        "Standard_E64i_v3",
        "Standard_E64is_v3",
        "Standard_E64s_v3",
        "Standard_E64s_v4",
        "Standard_E8-2ds_v4",
        "Standard_E8-2s_v3",
        "Standard_E8-2s_v4",
        "Standard_E8-4ds_v4",
        "Standard_E8-4s_v3",
        "Standard_E8-4s_v4",
        "Standard_E8_v3",
        "Standard_E8_v4",
        "Standard_E8a_v3",
        "Standard_E8a_v4",
        "Standard_E8as_v3",
        "Standard_E8as_v4",
        "Standard_E8d_v4",
        "Standard_E8ds_v4",
        "Standard_E8s_v3",
        "Standard_E8s_v4",
        "Standard_E96a_v4",
        "Standard_E96as_v4",
        "Standard_F1",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F16s_v2",
        "Standard_F1s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F2s_v2",
        "Standard_F32s_v2",
        "Standard_F4",
        "Standard_F48s_v2",
        "Standard_F4s",
        "Standard_F4s_v2",
        "Standard_F64s_v2",
        "Standard_F72s_v2",
        "Standard_F8",
        "Standard_F8s",
        "Standard_F8s_v2",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4-4",
        "Standard_GS4-8",
        "Standard_GS5",
        "Standard_GS5-16",
        "Standard_GS5-8",
        "Standard_H16",
        "Standard_H16_Promo",
        "Standard_H16m",
        "Standard_H16m_Promo",
        "Standard_H16mr",
        "Standard_H16mr_Promo",
        "Standard_H16r",
        "Standard_H16r_Promo",
        "Standard_H8",
        "Standard_H8_Promo",
        "Standard_H8m",
        "Standard_H8m_Promo",
        "Standard_HB120rs_v2",
        "Standard_HB60rs",
        "Standard_HC44rs",
        "Standard_L16s",
        "Standard_L16s_v2",
        "Standard_L32s",
        "Standard_L32s_v2",
        "Standard_L48s_v2",
        "Standard_L4s",
        "Standard_L64s_v2",
        "Standard_L80s_v2",
        "Standard_L8s",
        "Standard_L8s_v2",
        "Standard_LRS",
        "Standard_M128",
        "Standard_M128-32ms",
        "Standard_M128-64ms",
        "Standard_M128m",
        "Standard_M128ms",
        "Standard_M128s",
        "Standard_M16-4ms",
        "Standard_M16-8ms",
        "Standard_M16ms",
        "Standard_M192ms_v2",
        "Standard_M192s_v2",
        "Standard_M208ms_v2",
        "Standard_M208s_v2",
        "Standard_M24ms_v2",
        "Standard_M24s_v2",
        "Standard_M32-16ms",
        "Standard_M32-8ms",
        "Standard_M32ls",
        "Standard_M32ms",
        "Standard_M32ts",
        "Standard_M416-208ms_v2",
        "Standard_M416-208s_v2",
        "Standard_M416ms_v2",
        "Standard_M416s_v2",
        "Standard_M48ms_v2",
        "Standard_M48s_v2",
        "Standard_M64",
        "Standard_M64-16ms",
        "Standard_M64-32ms",
        "Standard_M64ls",
        "Standard_M64m",
        "Standard_M64ms",
        "Standard_M64s",
        "Standard_M8-2ms",
        "Standard_M8-4ms",
        "Standard_M8ms",
        "Standard_M96ms_v2",
        "Standard_M96s_v2",
        "Standard_NC12",
        "Standard_NC12_Promo",
        "Standard_NC12s_v2",
        "Standard_NC12s_v3",
        "Standard_NC24",
        "Standard_NC24_Promo",
        "Standard_NC24r",
        "Standard_NC24r_Promo",
        "Standard_NC24rs_v2",
        "Standard_NC24rs_v3",
        "Standard_NC24s_v2",
        "Standard_NC24s_v3",
        "Standard_NC6",
        "Standard_NC6_Promo",
        "Standard_NC6s_v2",
        "Standard_NC6s_v3",
        "Standard_ND12s",
        "Standard_ND24rs",
        "Standard_ND24s",
        "Standard_ND40rs_v2",
        "Standard_ND40s_v3",
        "Standard_ND6s",
        "Standard_NP10s",
        "Standard_NP20s",
        "Standard_NP40s",
        "Standard_NV12",
        "Standard_NV12_Promo",
        "Standard_NV12s_v2",
        "Standard_NV12s_v3",
        "Standard_NV16as_v4",
        "Standard_NV24",
        "Standard_NV24_Promo",
        "Standard_NV24s_v2",
        "Standard_NV24s_v3",
        "Standard_NV32as_v4",
        "Standard_NV48s_v3",
        "Standard_NV4as_v4",
        "Standard_NV6",
        "Standard_NV6_Promo",
        "Standard_NV6s_v2",
        "Standard_NV8as_v4",
        "Standard_PB12s",
        "Standard_PB24s",
        "Standard_PB6s",
        "Standard_ZRS"
      ],
      "defaultValue": "Standard_DS2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "akesyspoolVnetSubnetID": {
      "metadata": {
        "description": "Sets the vnet subnet of agent pool 'akesyspool'."
      },
      "type": "string"
    },
    "akesyspoolosImageName": {
      "defaultValue": "",
      "metadata": {
        "description": "Name of a Linux OS image. Needs to be used in conjuction with osImageResourceGroup."
      },
      "type": "string"
    },
    "akesyspoolosImageOffer": {
      "defaultValue": "UbuntuServer",
      "metadata": {
        "description": "Linux OS image type."
      },
      "type": "string"
    },
    "akesyspoolosImagePublisher": {
      "defaultValue": "Canonical",
      "metadata": {
        "description": "OS image publisher."
      },
      "type": "string"
    },
    "akesyspoolosImageResourceGroup": {
      "defaultValue": "",
      "metadata": {
        "description": "Resource group of a Linux OS image. Needs to be used in conjuction with osImageName."
      },
      "type": "string"
    },
    "akesyspoolosImageSKU": {
      "defaultValue": "16.04-LTS",
      "metadata": {
        "description": "OS image SKU."
      },
      "type": "string"
    },
    "akesyspoolosImageVersion": {
      "defaultValue": "latest",
      "metadata": {
        "description": "OS image version."
      },
      "type": "string"
    },
    "aksEngineVersion": {
      "metadata": {
        "description": "Contains details of the aks-engine version which was used to provision the cluster"
      },
      "type": "string"
    },
    "apiServerCertificate": {
      "metadata": {
        "description": "The base 64 server certificate used on the master"
      },
      "type": "string"
    },
    "apiServerPrivateKey": {
      "metadata": {
        "description": "The base 64 server private key used on the master."
      },
      "type": "securestring"
    },
    "caCertificate": {
      "metadata": {
        "description": "The base 64 certificate authority certificate"
      },
      "type": "string"
    },
    "caPrivateKey": {
      "metadata": {
        "description": "The base 64 CA private key used on the master."
      },
      "type": "securestring"
    },
    "clientCertificate": {
      "metadata": {
        "description": "The base 64 client certificate used to communicate with the master"
      },
      "type": "string"
    },
    "clientPrivateKey": {
      "metadata": {
        "description": "The base 64 client private key used to communicate with the master"
      },
      "type": "securestring"
    },
    "cloudproviderConfig": {
      "defaultValue": {
        "cloudProviderBackoff": false,
        "cloudProviderBackoffDuration": 0,
        "cloudProviderBackoffExponent": "0",
        "cloudProviderBackoffJitter": "0",
        "cloudProviderBackoffMode": "v1",
        "cloudProviderBackoffRetries": 10,
        "cloudProviderDisableOutboundSNAT": false,
        "cloudProviderRateLimit": false,
        "cloudProviderRateLimitBucket": 0,
        "cloudProviderRateLimitBucketWrite": 0,
        "cloudProviderRateLimitQPS": "0",
        "cloudProviderRateLimitQPSWrite": "0"
      },
      "type": "object"
    },
    "cniPluginsURL": {
      "defaultValue": "https://kubernetesartifacts.azureedge.net/cni-plugins/v0.7.6/binaries/cni-plugins-amd64-v0.7.6.tgz",
      "type": "string"
    },
    "containerRuntime": {
      "allowedValues": [
        "docker",
        "containerd"
      ],
      "defaultValue": "docker",
      "metadata": {
        "description": "The container runtime to use (docker|containerd)"
      },
      "type": "string"
    },
    "containerdDownloadURLBase": {
      "defaultValue": "https://storage.googleapis.com/cri-containerd-release/",
      "type": "string"
    },
    "containerdVersion": {
      "allowedValues": [
        "1.3.2",
        "1.3.3",
        "1.3.4",
        "1.3.5",
        "1.3.6",
        "1.3.7"
      ],
      "defaultValue": "1.3.7",
      "metadata": {
        "description": "The Azure Moby build version"
      },
      "type": "string"
    },
    "dockerBridgeCidr": {
      "metadata": {
        "description": "Docker bridge network IP address and subnet"
      },
      "type": "string"
    },
    "enableAggregatedAPIs": {
      "defaultValue": false,
      "metadata": {
        "description": "Enable aggregated API on master nodes"
      },
      "type": "bool"
    },
    "etcdClientCertificate": {
      "metadata": {
        "description": "The base 64 server certificate used on the master"
      },
      "type": "string"
    },
    "etcdClientPrivateKey": {
      "metadata": {
        "description": "The base 64 server private key used on the master."
      },
      "type": "securestring"
    },
    "etcdDiskSizeGB": {
      "metadata": {
        "description": "Size in GB to allocate for etcd volume"
      },
      "type": "string"
    },
    "etcdDownloadURLBase": {
      "metadata": {
        "description": "etcd image base URL"
      },
      "type": "string"
    },
    "etcdEncryptionKey": {
      "metadata": {
        "description": "Encryption at rest key for etcd"
      },
      "type": "string"
    },
    "etcdPeerCertificate0": {
      "metadata": {
        "description": "The base 64 server certificates used on the master"
      },
      "type": "string"
    },
    "etcdPeerCertificate1": {
      "metadata": {
        "description": "The base 64 server certificates used on the master"
      },
      "type": "string"
    },
    "etcdPeerCertificate2": {
      "metadata": {
        "description": "The base 64 server certificates used on the master"
      },
      "type": "string"
    },
    "etcdPeerPrivateKey0": {
      "metadata": {
        "description": "The base 64 server private keys used on the master."
      },
      "type": "securestring"
    },
    "etcdPeerPrivateKey1": {
      "metadata": {
        "description": "The base 64 server private keys used on the master."
      },
      "type": "securestring"
    },
    "etcdPeerPrivateKey2": {
      "metadata": {
        "description": "The base 64 server private keys used on the master."
      },
      "type": "securestring"
    },
    "etcdServerCertificate": {
      "metadata": {
        "description": "The base 64 server certificate used on the master"
      },
      "type": "string"
    },
    "etcdServerPrivateKey": {
      "metadata": {
        "description": "The base 64 server private key used on the master."
      },
      "type": "securestring"
    },
    "etcdVersion": {
      "metadata": {
        "description": "etcd version"
      },
      "type": "string"
    },
    "firstConsecutiveStaticIP": {
      "defaultValue": "193.0.1.0",
      "metadata": {
        "description": "Sets the static IP of the first master"
      },
      "type": "string"
    },
    "fqdnEndpointSuffix": {
      "defaultValue": "cloudapp.azure.com",
      "metadata": {
        "description": "Endpoint of FQDN."
      },
      "type": "string"
    },
    "gcHighThreshold": {
      "defaultValue": 85,
      "metadata": {
        "description": "High Threshold for Image Garbage collection on each node"
      },
      "type": "int"
    },
    "gcLowThreshold": {
      "defaultValue": 80,
      "metadata": {
        "description": "Low Threshold for Image Garbage collection on each node."
      },
      "type": "int"
    },
    "generatorCode": {
      "metadata": {
        "description": "The generator code used to identify the generator"
      },
      "type": "string"
    },
    "kubeBinaryURL": {
      "defaultValue": "",
      "metadata": {
        "description": "The package tarball URL to extract kubelet and kubectl binaries from."
      },
      "type": "string"
    },
    "kubeClusterCidr": {
      "metadata": {
        "description": "Kubernetes cluster subnet"
      },
      "type": "string"
    },
    "kubeConfigCertificate": {
      "metadata": {
        "description": "The base 64 certificate used by cli to communicate with the master"
      },
      "type": "string"
    },
    "kubeConfigPrivateKey": {
      "metadata": {
        "description": "The base 64 private key used by cli to communicate with the master"
      },
      "type": "securestring"
    },
    "kubeDNSServiceIP": {
      "metadata": {
        "description": "Kubernetes DNS IP"
      },
      "type": "string"
    },
    "kubernetesACIConnectorEnabled": {
      "metadata": {
        "description": "ACI Connector Status"
      },
      "type": "bool"
    },
    "linuxAdminUsername": {
      "metadata": {
        "description": "User name for the Linux Virtual Machines (SSH or Password)."
      },
      "type": "string"
    },
    "location": {
      "defaultValue": "eastus",
      "metadata": {
        "description": "Sets the location for all resources in the cluster"
      },
      "type": "string"
    },
    "masterEndpointDNSNamePrefix": {
      "metadata": {
        "description": "Sets the Domain name label for the master IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
      },
      "type": "string"
    },
    "masterOffset": {
      "allowedValues": [
        0,
        1,
        2,
        3,
        4
      ],
      "defaultValue": 0,
      "metadata": {
        "description": "The offset into the master pool where to start creating master VMs.  This value can be from 0 to 4, but must be less than masterCount."
      },
      "type": "int"
    },
    "masterSubnet": {
      "defaultValue": "",
      "metadata": {
        "description": "Sets the subnet of the master node(s)"
      },
      "type": "string"
    },
    "masterSubnetIPv6": {
      "defaultValue": "",
      "metadata": {
        "description": "Sets the IPv6 subnet of the master node(s)."
      },
      "type": "string"
    },
    "masterVMSize": {
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A10",
        "Standard_A11",
        "Standard_A1_v2",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_B12ms",
        "Standard_B16ms",
        "Standard_B1ls",
        "Standard_B1ms",
        "Standard_B1s",
        "Standard_B20ms",
        "Standard_B2ms",
        "Standard_B2s",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_D1",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D16_v3",
        "Standard_D16_v4",
        "Standard_D16a_v3",
        "Standard_D16a_v4",
        "Standard_D16as_v3",
        "Standard_D16as_v4",
        "Standard_D16d_v4",
        "Standard_D16ds_v4",
        "Standard_D16s_v3",
        "Standard_D16s_v4",
        "Standard_D1_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D2_v3",
        "Standard_D2_v4",
        "Standard_D2a_v3",
        "Standard_D2a_v4",
        "Standard_D2as_v3",
        "Standard_D2as_v4",
        "Standard_D2d_v4",
        "Standard_D2ds_v4",
        "Standard_D2s_v3",
        "Standard_D2s_v4",
        "Standard_D3",
        "Standard_D32_v3",
        "Standard_D32_v4",
        "Standard_D32a_v3",
        "Standard_D32a_v4",
        "Standard_D32as_v3",
        "Standard_D32as_v4",
        "Standard_D32d_v4",
        "Standard_D32ds_v4",
        "Standard_D32s_v3",
        "Standard_D32s_v4",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D48_v3",
        "Standard_D48_v4",
        "Standard_D48a_v3",
        "Standard_D48a_v4",
        "Standard_D48as_v3",
        "Standard_D48as_v4",
        "Standard_D48d_v4",
        "Standard_D48ds_v4",
        "Standard_D48s_v3",
        "Standard_D48s_v4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D4_v3",
        "Standard_D4_v4",
        "Standard_D4a_v3",
        "Standard_D4a_v4",
        "Standard_D4as_v3",
        "Standard_D4as_v4",
        "Standard_D4d_v4",
        "Standard_D4ds_v4",
        "Standard_D4s_v3",
        "Standard_D4s_v4",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_D64_v3",
        "Standard_D64_v4",
        "Standard_D64a_v3",
        "Standard_D64a_v4",
        "Standard_D64as_v3",
        "Standard_D64as_v4",
        "Standard_D64d_v4",
        "Standard_D64ds_v4",
        "Standard_D64s_v3",
        "Standard_D64s_v4",
        "Standard_D8_v3",
        "Standard_D8_v4",
        "Standard_D8a_v3",
        "Standard_D8a_v4",
        "Standard_D8as_v3",
        "Standard_D8as_v4",
        "Standard_D8d_v4",
        "Standard_D8ds_v4",
        "Standard_D8s_v3",
        "Standard_D8s_v4",
        "Standard_D96a_v3",
        "Standard_D96a_v4",
        "Standard_D96as_v3",
        "Standard_D96as_v4",
        "Standard_DC1s_v2",
        "Standard_DC2s",
        "Standard_DC2s_v2",
        "Standard_DC4s",
        "Standard_DC4s_v2",
        "Standard_DC8_v2",
        "Standard_DC8s",
        "Standard_DS1",
        "Standard_DS11",
        "Standard_DS11-1_v2",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12-1_v2",
        "Standard_DS12-2_v2",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13-2_v2",
        "Standard_DS13-4_v2",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14-4_v2",
        "Standard_DS14-8_v2",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS1_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_E16-4ds_v4",
        "Standard_E16-4s_v3",
        "Standard_E16-4s_v4",
        "Standard_E16-8ds_v4",
        "Standard_E16-8s_v3",
        "Standard_E16-8s_v4",
        "Standard_E16_v3",
        "Standard_E16_v4",
        "Standard_E16a_v3",
        "Standard_E16a_v4",
        "Standard_E16as_v3",
        "Standard_E16as_v4",
        "Standard_E16d_v4",
        "Standard_E16ds_v4",
        "Standard_E16s_v3",
        "Standard_E16s_v4",
        "Standard_E20_v3",
        "Standard_E20_v4",
        "Standard_E20a_v4",
        "Standard_E20as_v4",
        "Standard_E20d_v4",
        "Standard_E20ds_v4",
        "Standard_E20s_v3",
        "Standard_E20s_v4",
        "Standard_E2_v3",
        "Standard_E2_v4",
        "Standard_E2a_v3",
        "Standard_E2a_v4",
        "Standard_E2as_v3",
        "Standard_E2as_v4",
        "Standard_E2d_v4",
        "Standard_E2ds_v4",
        "Standard_E2s_v3",
        "Standard_E2s_v4",
        "Standard_E32-16ds_v4",
        "Standard_E32-16s_v3",
        "Standard_E32-16s_v4",
        "Standard_E32-8ds_v4",
        "Standard_E32-8s_v3",
        "Standard_E32-8s_v4",
        "Standard_E32_v3",
        "Standard_E32_v4",
        "Standard_E32a_v3",
        "Standard_E32a_v4",
        "Standard_E32as_v3",
        "Standard_E32as_v4",
        "Standard_E32d_v4",
        "Standard_E32ds_v4",
        "Standard_E32s_v3",
        "Standard_E32s_v4",
        "Standard_E4-2ds_v4",
        "Standard_E4-2s_v3",
        "Standard_E4-2s_v4",
        "Standard_E48_v3",
        "Standard_E48_v4",
        "Standard_E48a_v3",
        "Standard_E48a_v4",
        "Standard_E48as_v3",
        "Standard_E48as_v4",
        "Standard_E48d_v4",
        "Standard_E48ds_v4",
        "Standard_E48s_v3",
        "Standard_E48s_v4",
        "Standard_E4_v3",
        "Standard_E4_v4",
        "Standard_E4a_v3",
        "Standard_E4a_v4",
        "Standard_E4as_v3",
        "Standard_E4as_v4",
        "Standard_E4d_v4",
        "Standard_E4ds_v4",
        "Standard_E4s_v3",
        "Standard_E4s_v4",
        "Standard_E64-16ds_v4",
        "Standard_E64-16s_v3",
        "Standard_E64-16s_v4",
        "Standard_E64-32ds_v4",
        "Standard_E64-32s_v3",
        "Standard_E64-32s_v4",
        "Standard_E64_v3",
        "Standard_E64_v4",
        "Standard_E64a_v3",
        "Standard_E64a_v4",
        "Standard_E64as_v3",
        "Standard_E64as_v4",
        "Standard_E64d_v4",
        "Standard_E64ds_v4",
        "Standard_E64i_v3",
        "Standard_E64is_v3",
        "Standard_E64s_v3",
        "Standard_E64s_v4",
        "Standard_E8-2ds_v4",
        "Standard_E8-2s_v3",
        "Standard_E8-2s_v4",
        "Standard_E8-4ds_v4",
        "Standard_E8-4s_v3",
        "Standard_E8-4s_v4",
        "Standard_E8_v3",
        "Standard_E8_v4",
        "Standard_E8a_v3",
        "Standard_E8a_v4",
        "Standard_E8as_v3",
        "Standard_E8as_v4",
        "Standard_E8d_v4",
        "Standard_E8ds_v4",
        "Standard_E8s_v3",
        "Standard_E8s_v4",
        "Standard_E96a_v4",
        "Standard_E96as_v4",
        "Standard_F1",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F16s_v2",
        "Standard_F1s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F2s_v2",
        "Standard_F32s_v2",
        "Standard_F4",
        "Standard_F48s_v2",
        "Standard_F4s",
        "Standard_F4s_v2",
        "Standard_F64s_v2",
        "Standard_F72s_v2",
        "Standard_F8",
        "Standard_F8s",
        "Standard_F8s_v2",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4-4",
        "Standard_GS4-8",
        "Standard_GS5",
        "Standard_GS5-16",
        "Standard_GS5-8",
        "Standard_H16",
        "Standard_H16_Promo",
        "Standard_H16m",
        "Standard_H16m_Promo",
        "Standard_H16mr",
        "Standard_H16mr_Promo",
        "Standard_H16r",
        "Standard_H16r_Promo",
        "Standard_H8",
        "Standard_H8_Promo",
        "Standard_H8m",
        "Standard_H8m_Promo",
        "Standard_HB120rs_v2",
        "Standard_HB60rs",
        "Standard_HC44rs",
        "Standard_L16s",
        "Standard_L16s_v2",
        "Standard_L32s",
        "Standard_L32s_v2",
        "Standard_L48s_v2",
        "Standard_L4s",
        "Standard_L64s_v2",
        "Standard_L80s_v2",
        "Standard_L8s",
        "Standard_L8s_v2",
        "Standard_LRS",
        "Standard_M128",
        "Standard_M128-32ms",
        "Standard_M128-64ms",
        "Standard_M128m",
        "Standard_M128ms",
        "Standard_M128s",
        "Standard_M16-4ms",
        "Standard_M16-8ms",
        "Standard_M16ms",
        "Standard_M192ms_v2",
        "Standard_M192s_v2",
        "Standard_M208ms_v2",
        "Standard_M208s_v2",
        "Standard_M24ms_v2",
        "Standard_M24s_v2",
        "Standard_M32-16ms",
        "Standard_M32-8ms",
        "Standard_M32ls",
        "Standard_M32ms",
        "Standard_M32ts",
        "Standard_M416-208ms_v2",
        "Standard_M416-208s_v2",
        "Standard_M416ms_v2",
        "Standard_M416s_v2",
        "Standard_M48ms_v2",
        "Standard_M48s_v2",
        "Standard_M64",
        "Standard_M64-16ms",
        "Standard_M64-32ms",
        "Standard_M64ls",
        "Standard_M64m",
        "Standard_M64ms",
        "Standard_M64s",
        "Standard_M8-2ms",
        "Standard_M8-4ms",
        "Standard_M8ms",
        "Standard_M96ms_v2",
        "Standard_M96s_v2",
        "Standard_NC12",
        "Standard_NC12_Promo",
        "Standard_NC12s_v2",
        "Standard_NC12s_v3",
        "Standard_NC24",
        "Standard_NC24_Promo",
        "Standard_NC24r",
        "Standard_NC24r_Promo",
        "Standard_NC24rs_v2",
        "Standard_NC24rs_v3",
        "Standard_NC24s_v2",
        "Standard_NC24s_v3",
        "Standard_NC6",
        "Standard_NC6_Promo",
        "Standard_NC6s_v2",
        "Standard_NC6s_v3",
        "Standard_ND12s",
        "Standard_ND24rs",
        "Standard_ND24s",
        "Standard_ND40rs_v2",
        "Standard_ND40s_v3",
        "Standard_ND6s",
        "Standard_NP10s",
        "Standard_NP20s",
        "Standard_NP40s",
        "Standard_NV12",
        "Standard_NV12_Promo",
        "Standard_NV12s_v2",
        "Standard_NV12s_v3",
        "Standard_NV16as_v4",
        "Standard_NV24",
        "Standard_NV24_Promo",
        "Standard_NV24s_v2",
        "Standard_NV24s_v3",
        "Standard_NV32as_v4",
        "Standard_NV48s_v3",
        "Standard_NV4as_v4",
        "Standard_NV6",
        "Standard_NV6_Promo",
        "Standard_NV6s_v2",
        "Standard_NV8as_v4",
        "Standard_PB12s",
        "Standard_PB24s",
        "Standard_PB6s",
        "Standard_ZRS"
      ],
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "masterVnetSubnetID": {
      "metadata": {
        "description": "Sets the vnet subnet of the master."
      },
      "type": "string"
    },
    "maxPods": {
      "defaultValue": 30,
      "metadata": {
        "description": "This param has been deprecated."
      },
      "type": "int"
    },
    "mobyVersion": {
      "allowedValues": [
        "3.0.1",
        "3.0.2",
        "3.0.3",
        "3.0.4",
        "3.0.5",
        "3.0.6",
        "3.0.7",
        "3.0.8",
        "3.0.10",
        "3.0.11",
        "3.0.12",
        "3.0.13",
        "19.03.11",
        "19.03.12"
      ],
      "defaultValue": "19.03.12",
      "metadata": {
        "description": "The Azure Moby build version"
      },
      "type": "string"
    },
    "nameSuffix": {
      "defaultValue": "20791455",
      "metadata": {
        "description": "A string hash of the master DNS name to uniquely identify the cluster."
      },
      "type": "string"
    },
    "networkMode": {
      "allowedValues": [
        "",
        "transparent",
        "bridge"
      ],
      "defaultValue": "transparent",
      "metadata": {
        "description": "The network mode to use for CNI (transparent|bridge)"
      },
      "type": "string"
    },
    "networkPlugin": {
      "allowedValues": [
        "kubenet",
        "azure",
        "flannel",
        "cilium",
        "antrea"
      ],
      "defaultValue": "azure",
      "metadata": {
        "description": "The network plugin to use for Kubernetes (kubenet|azure|flannel|cilium|antrea)"
      },
      "type": "string"
    },
    "networkPolicy": {
      "allowedValues": [
        "",
        "none",
        "azure",
        "calico",
        "cilium",
        "antrea"
      ],
      "defaultValue": "azure",
      "metadata": {
        "description": "The network policy enforcement to use (calico|cilium|antrea); 'none' and 'azure' here for backwards compatibility"
      },
      "type": "string"
    },
    "orchestratorName": {
      "maxLength": 3,
      "metadata": {
        "description": "The orchestrator name used to identify the orchestrator.  This must be no more than 3 digits in length, otherwise it will exceed Windows Naming"
      },
      "minLength": 3,
      "type": "string"
    },
    "osImageName": {
      "defaultValue": "",
      "metadata": {
        "description": "Name of a Linux OS image. Needs to be used in conjuction with osImageResourceGroup."
      },
      "type": "string"
    },
    "osImageOffer": {
      "defaultValue": "UbuntuServer",
      "metadata": {
        "description": "Linux OS image type."
      },
      "type": "string"
    },
    "osImagePublisher": {
      "defaultValue": "Canonical",
      "metadata": {
        "description": "OS image publisher."
      },
      "type": "string"
    },
    "osImageResourceGroup": {
      "defaultValue": "",
      "metadata": {
        "description": "Resource group of a Linux OS image. Needs to be used in conjuction with osImageName."
      },
      "type": "string"
    },
    "osImageSKU": {
      "defaultValue": "16.04-LTS",
      "metadata": {
        "description": "OS image SKU."
      },
      "type": "string"
    },
    "osImageVersion": {
      "defaultValue": "latest",
      "metadata": {
        "description": "OS image version."
      },
      "type": "string"
    },
    "sshRSAPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines.  Not Required.  If not set, you must provide a password key."
      },
      "type": "string"
    },
    "targetEnvironment": {
      "defaultValue": "AzurePublicCloud",
      "metadata": {
        "description": "The azure deploy environment. Currently support: AzurePublicCloud, AzureChinaCloud"
      },
      "type": "string"
    },
    "vnetCidr": {
      "defaultValue": "10.0.0.0/8",
      "metadata": {
        "description": "Cluster vnet cidr"
      },
      "type": "string"
    },
    "vnetCidrIPv6": {
      "defaultValue": "2001:1234:5678:9a00::/56",
      "metadata": {
        "description": "Cluster vnet cidr IPv6"
      },
      "type": "string"
    },
    "vnetCniLinuxPluginsURL": {
      "defaultValue": "https://kubernetesartifacts.azureedge.net/azure-cni/v1.0.30/binaries/azure-vnet-cni-linux-amd64-v1.0.30.tgz",
      "type": "string"
    },
    "vnetCniWindowsPluginsURL": {
      "defaultValue": "https://kubernetesartifacts.azureedge.net/azure-cni/v1.0.30/binaries/azure-vnet-cni-windows-amd64-v1.0.30.zip",
      "type": "string"
    }
  },
  "variables": {
    "agentLbBackendPoolName": "[parameters('masterEndpointDNSNamePrefix')]",
    "agentLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('agentLbName'))]",
    "agentLbIPConfigID": "[concat(variables('agentLbID'),'/frontendIPConfigurations/', variables('agentLbIPConfigName'))]",
    "agentLbIPConfigName": "[concat(parameters('orchestratorName'), '-agent-outbound')]",
    "agentLbName": "[parameters('masterEndpointDNSNamePrefix')]",
    "agentPublicIPAddressName": "[concat(parameters('orchestratorName'), '-agent-ip-outbound')]",
    "akeapipoolCount": "[parameters('akeapipoolCount')]",
    "akeapipoolIndex": 1,
    "akeapipoolSubnetName": "[parameters('akeapipoolVnetSubnetID')]",
    "akeapipoolSubnetResourceGroup": "[split(variables('akeapipoolVnetSubnetID'), '/')[4]]",
    "akeapipoolVMNamePrefix": "k8s-akeapipool-20791455-vmss",
    "akeapipoolVMSize": "[parameters('akeapipoolVMSize')]",
    "akeapipoolVnet": "[split(variables('akeapipoolVnetSubnetID'), '/')[8]]",
    "akeapipoolVnetParts": "[split(parameters('akeapipoolVnetSubnetID'),'/subnets/')]",
    "akeapipoolVnetSubnetID": "[parameters('akeapipoolVnetSubnetID')]",
    "akeapipoolosImageName": "[parameters('akeapipoolosImageName')]",
    "akeapipoolosImageOffer": "[parameters('akeapipoolosImageOffer')]",
    "akeapipoolosImagePublisher": "[parameters('akeapipoolosImagePublisher')]",
    "akeapipoolosImageResourceGroup": "[parameters('akeapipoolosImageResourceGroup')]",
    "akeapipoolosImageSKU": "[parameters('akeapipoolosImageSKU')]",
    "akeapipoolosImageVersion": "[parameters('akeapipoolosImageVersion')]",
    "akeiotpoolCount": "[parameters('akeiotpoolCount')]",
    "akeiotpoolIndex": 2,
    "akeiotpoolSubnetName": "[parameters('akeiotpoolVnetSubnetID')]",
    "akeiotpoolSubnetResourceGroup": "[split(variables('akeiotpoolVnetSubnetID'), '/')[4]]",
    "akeiotpoolVMNamePrefix": "k8s-akeiotpool-20791455-vmss",
    "akeiotpoolVMSize": "[parameters('akeiotpoolVMSize')]",
    "akeiotpoolVnet": "[split(variables('akeiotpoolVnetSubnetID'), '/')[8]]",
    "akeiotpoolVnetParts": "[split(parameters('akeiotpoolVnetSubnetID'),'/subnets/')]",
    "akeiotpoolVnetSubnetID": "[parameters('akeiotpoolVnetSubnetID')]",
    "akeiotpoolosImageName": "[parameters('akeiotpoolosImageName')]",
    "akeiotpoolosImageOffer": "[parameters('akeiotpoolosImageOffer')]",
    "akeiotpoolosImagePublisher": "[parameters('akeiotpoolosImagePublisher')]",
    "akeiotpoolosImageResourceGroup": "[parameters('akeiotpoolosImageResourceGroup')]",
    "akeiotpoolosImageSKU": "[parameters('akeiotpoolosImageSKU')]",
    "akeiotpoolosImageVersion": "[parameters('akeiotpoolosImageVersion')]",
    "akesyspoolCount": "[parameters('akesyspoolCount')]",
    "akesyspoolIndex": 0,
    "akesyspoolSubnetName": "[parameters('akesyspoolVnetSubnetID')]",
    "akesyspoolSubnetResourceGroup": "[split(variables('akesyspoolVnetSubnetID'), '/')[4]]",
    "akesyspoolVMNamePrefix": "k8s-akesyspool-20791455-vmss",
    "akesyspoolVMSize": "[parameters('akesyspoolVMSize')]",
    "akesyspoolVnet": "[split(variables('akesyspoolVnetSubnetID'), '/')[8]]",
    "akesyspoolVnetParts": "[split(parameters('akesyspoolVnetSubnetID'),'/subnets/')]",
    "akesyspoolVnetSubnetID": "[parameters('akesyspoolVnetSubnetID')]",
    "akesyspoolosImageName": "[parameters('akesyspoolosImageName')]",
    "akesyspoolosImageOffer": "[parameters('akesyspoolosImageOffer')]",
    "akesyspoolosImagePublisher": "[parameters('akesyspoolosImagePublisher')]",
    "akesyspoolosImageResourceGroup": "[parameters('akesyspoolosImageResourceGroup')]",
    "akesyspoolosImageSKU": "[parameters('akesyspoolosImageSKU')]",
    "akesyspoolosImageVersion": "[parameters('akesyspoolosImageVersion')]",
    "alwaysPullWindowsPauseImage": "false",
    "apiVersionAuthorizationSystem": "2018-09-01-preview",
    "apiVersionAuthorizationUser": "2018-09-01-preview",
    "apiVersionCompute": "2019-07-01",
    "apiVersionDeployments": "2018-06-01",
    "apiVersionKeyVault": "2018-02-14",
    "apiVersionManagedIdentity": "2018-11-30",
    "apiVersionNetwork": "2018-08-01",
    "apiVersionStorage": "2018-07-01",
    "applicationInsightsKey": "c92d8284-b550-4b06-b7ba-e80fd7178faa",
    "cloudInitFiles": {
      "customSearchDomainsScript": "H4sIAAAAAAAA/3yQP2/bQAzF9/sUrN2hHU4nGzC6tkOzZsqSRaBOtHTR6SiQdBwZ+fCBIwNBgCALAb73wD+/7Y/QphJa1MEpGfgXp3ySSBB4toCXk1CIXAxTIdEwCz8nTVyaNVbp4BzFgWED0BX1SihxgA28ghGBRwhkMRSyM8sYUjGSI0bSqguH2sfMp86nkqyKx97pokZTtNwIqaEY7Gs4wK6G24BUenfGZM2RpcHZmsxxVCdkssSpuyYPsNvXgLP5/vrQAqmoYc4ghHnqQFXX4o05KyhOLfrI08RlbT5L82IDl3315ybn1CrMGEfsaUz21TkrkCuD953wxKmAf4C/P399WCYQ0F8ChH/+MfyGbzy3/X9/594CAAD//x81gP2sAQAA",
      "dhcpv6ConfigurationScript": "H4sIAAAAAAAA/3RRT2vbThC9z6d4P8U4vx7WsgvxpWmgKFIqaiQIDr0UhKwdRUvVXVW76wQcffeiCBXaOpcd5jHvz85c/Bd624cHpUPWRxxK2xBZdhA8FYNOdVyXqp16T3T7OdqlcbbfFlGeJUWS7uKPIbsqlE3VjU+rWLvtqjK6pmiXP9wWaZbuiyi5m+Y0uyfTfw+VdtzXZcV2JcOrtaha46VQWrlVVT8S9VxKiB5C4vISWbz/mt9/eTVN7x7uP+3TPMP1dZxHeHmB6z2TGtXArllDaXZblN4ZAgDfwbbMHa7mdg4KsYHYQlQ13voFRFsjPJZ92KrD3wOj26rl0rKFOE7mc544j4hKKQtVF9q4gp+Vdfb/dzgR8NhzB/HzOUGwOG2GYCzvh2Akc9WYGb25mXAaiJzxVfN2zOUS/5ghcOoHG++wWX8IsDidOd8wMr8RzrEXp7OLH0apP4/7W8V6aaBqaZ70tI7lcsZ894rQRZwn9CsAAP//3eGEyH0CAAA=",
      "dhcpv6SystemdService": "H4sIAAAAAAAA/zTNsc6CMBAH8P1e45uh27d10IiJkwMaB8JQy19prNfmeqD49A7EJ/h1Zw7a0w7FS8gaEluwu0YMo8/zP21uCrEMfSV5VIljYNTq5A4l6lrIHDx6Oi0ZNjHKmJSaN3yrTtSalNW4zyQwPrG6wJBiVqBahbqMRN2Bi7oYe7o4VgzbxT6nqKGaCuTH/TXHPX0DAAD//wVR54mwAAAA",
      "dockerMonitorSystemdService": "H4sIAAAAAAAA/zSOwUrDQBCG7/sUC56T6APsoeoKOZhC0uIhBBk3UzN0Myuzk9q8vdDY2zcw//f//ZFJB/OKOQj9KCV2YDe2OoHaMGE4ZzumcEaxE0LUyQKPVjAriGZLJ8uII45md1IUt72WGeVCAU3fbTCYdks4iL+w5vvZYXBPj6bFGYhvBn8ldStm4/lCknhGVveybw67uvHtZ3tsDvW7/+8x/oqhu3mrJUsVU4BYfRFX29ZiTkyapMyTDYkViFEKWVhpRtPXnBViHMwHsOL4vLp5iUrFklFKBflGNQ9+/2b+AgAA//9HkzLkKQEAAA==",
      "etcdMonitorSystemdService": "H4sIAAAAAAAA/zSOsUrFQBBF+/mKBeuX6AdsoRjBSnhBLEKKcXOfO7jZyMxEX/5eTLC7F86BM7xW8ZEeYUnly2WpkcOxg2f2kDLSpwV4mkIGF8+B6xQU5qxuQS6hAhMmur84NP6BjUG/JYGG/hgjnQ8+cvnhzf5vjxTvbumMmaXufncVjxuMuitSvyvtatqWJXFp36W2R8RpXqr4oo3lvY2G52rOpYz0xtUxPWxxXovLaTVo46wfcLrpXp7oNwAA//+L4/L48wAAAA==",
      "etcdSystemdService": "H4sIAAAAAAAA/4SRPY/bMAyGd/0KDb1R0X6ABrd22xvuA0kOHYIgkG0mJiJTLkX56n9fWOihTTt0JZ9H4Pvq8EooR1VD6hgnwUgOpOu10QNehrAYP3sMvg2gr7Do2YcMOklkUHXs8ggkvliDyJTurb2gDLnddHG0XWSIya7v/QWPnu7LuDoLsCOQt8jXjXi+gOjZswnYmpXoMV03Y8wk6psnSe+siRSQ4D/KYQc8YwdH1dCMHGk9wdVV8/j8dKq2X3buZtHsP9Wnp+qxcXdf/13U1b461Q/bG+czBnBmzWh7OPscxN5Nar9M4CgKnhf1moBLp+oFeMSUMFLaiWd5prA44Qyq+QFdGb0wONsi2XL/FJFEm+/azp5twNa+5/ttOJsTF6X824c/wqktpIL48OaXpA4PlMSHcCxVQv9xcWMOgiYn4F9Nqp8BAAD//xtfqZERAgAA",
      "healthMonitorScript": "H4sIAAAAAAAA/6xW0W7bNhR951fcqMLQPsi0UqDd3ClAUBiLsS4NbGcPKwpDoa4rwhIpkJTbVNG/DxRl2YodJ0uWl1jCOefee3hI6tUJLbWiN1xQFGu4iXVKtCwVQ6CyMDT+WSqkTAoTc4FK00LJNddcioWDDXRKiEYDgQQhS6HRbB4LXuAy5hkhHX+hSmF4jotcCm6k4uLb6zdQEQCdIRbwdjgEApBJFmfAFF+IOMfI86uPny/n55PL8XQxvb6cT/4aj4JEshWq2gOWJ5HnnqDQHgHgS/jyBQ6waogi8Lp2Eg++fv0AJkVBAMApMaMgELD6VQ+4hO3okDXaS04IwPeUZwhGlfgBEtmQ+RJOwA4nSwPvhuBXLE9qOKMJrqkos2ynEACyVIL3caMOrTGW1Y5dgzUPkxOvpTiLwsah/16wc2Wj31jhbLtng/srVjzLIJhN/rieTUNwyKQDLPlR4Qc9Pii+RR/S17faYM5MBo4V2H/B91RGecwFeDueeVtS49a7zq3Wr60W10HMDF/3PN9rdIvXJlZmF7vfavsDM429NfP8avZpPL5aNBl0PTbYRAokNSGr8gYzNE/aFnn8Y6GRSZHoKByCLE1RmsjztgAnsnBpLlUGQQ5+tcOrIVhCoCGYQWpMMaI0PH0/GA6Gg3DkVxfj80/zi3+uPk/nNU0xzkz60zuS+bYD/7Vf7ZSu4fTsl/DNfuh9h+/tgz/d/MA1lMKVvD2e+6cX3ctPa/ZzktJSH03J/RIvTwgalvw/8UCRFJILE3l27fWIUr+6mk7+Pp+PF5OrenT69v1vR8PU5OZApAIWM1QGKBpGrQNKoEFN7UtNWTxgyljUwxg7JMs4CtNiV3j7ONSC/GozVk3XpzSPWcoF6mfE9omJtfVfHtdHkmqLPCemlvdoRnviLw9oewm8gkAghLtnvjPsWsffcATOraA1YaBT+L07/IP2Erxrt8+dbfHM1sIf3EBI7N277SIKh4TJvJAChYn8kLhCs24HusC0JWG7eWAplT3IN9za69rfedm/xja99W6zY981BLMHNNvpekr7F8DDfOtKj3zvbCDt4jk7Lg5O30n25bkGIQ3osiikMs23x5KTfwMAAP//B/dbSSUKAAA=",
      "kubeletMonitorSystemdService": "H4sIAAAAAAAA/zSOQUvDQBCF7/MrFjy3acWDlz1UjFQQKklFMOQw3UzN0M2s7Exq8++Fxt6+gXnvfc2HsLXwTBoy/xgn8ehmdtajudBTOKk7jQeKZK4njNY7lM5lUsNs6vjohKijDjZHo+z/f5dK+cyBoKlnaKGUM+ckA4n5bbl522+/3nfV3q9X9w+PUM2FHuMvTno7awp+vYKKBmS5DpQXNj+RQnmhUF8jxai5iClgLA4sxWy5GJKwpbzU/uYPzauoYYwtfKIYdU+TH8ZovBiV8tIwf5PBXbl7gb8AAAD//3MkF98aAQAA",
      "kubeletSystemdService": "H4sIAAAAAAAA/3SPwU4CMRCG730KQrgujdFrDwLFEAgQVuIBCZntjjKhtNiZImh8d4OCenFOk8n/fZl/MQ8kS9VDdol2QjGYYa7Qo6huDDWdLlOQtT0QCxudOWkfHXhdUdCbc3SGL5kSsqmj22BqM6Y9OVRqUX5vSzVDFkhiwL/CkZUNe0oxbDFInzwajeJ0jU+Qvfxoy+wcMtsDSSkgmc3VzbWyB3TlyTVNaL7eqIDXDR13ouEtJ9QuBgEKmPiiavP6l/unReNRNc5TFCHWWHio0LNptt6H844d2fvVeNKzq9Ftx47Kj+YfoHUJdCfj/uBOLQaBBbxfqgcIgnXnaLbZCxWZMbUF0jOK+gwAAP//xbtnxXwBAAA=",
      "provisionConfigs": "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",
      "provisionInstalls": "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",
      "provisionScript": "H4sIAAAAAAAA/7RXbW/bOBL+zl8xqxp5wVZ23NsLsihcQLWVRhfH9sl2endFIMjSyCYikwpJ5aVJ/vuBkqXIttK4vdtv4iPO8JmZh0Py3W+tGWWtmS8XxHZd79Tp295Xa9I98ybOhT2cTjrHQIhEBeY9oRF8AzOCFk9Uy/+eCmwFnCmfMhSylQh+SyXlrBnwZRKjQrj6CGqBjADgPVVwRCJKCAYLDo2D0Fd4+L5xsOBSMX+Jh+9BKl+oIJWKL2UgaKLg06dsrSUhERdAgTJoHEi8gTb87fjo6PAjhJwA5MTkW8Q8yVMRYFMuKswA5gITME9vYP/dmd0f2e7YHp7u/4SzvT2YCfSvCUBECzoNCibeZDTXVssycaxTEkvMEBkjJtDOrUPOkEgMwaRgtCqEWqGxOyWSf/2EQcBZROepQC8RKPAmpZIqlITc+VR5ERdeRGPMw2m/6Zcyqfw4ljo7T09FzDuSqhgTgkymAq3RxX/AuD1q/r3ZNgje+jEYjQM/WX4HrV0ww0OD/CLXPPJfo/pim2+S3++JPen2vJFtu17XdiedxkGu98d13Dl1utbEHj/DEwSpAjPc/7av99aHF+AqA9ovwPsMaBwcDIY923MGPftf8Du0Dw8PK6ue2/+uW3TkOpfWxNa//2+LrtoCUXSJ3hKVoAEY3UJIVrikbCpRGBBsYRs2MfosTbpFikMDAg1NKxABqDX6Mpr2BL1FIUujF0gbEXJ51vP6wy/jrL2NrMlZp1LX20VorhRXNq6y0zW2TCt7eZtNha+z9Ocot+PIcQJwOu33PWcwnlj9vufa/5w6rt3rRL7uCqvWoFl8g8ajM/Yuz3rP0OmAEinC1VY/aX/4o2g+9X61XdZ9C5/Tz9PBZOq5dt+2xnbm22ifNI/+MKruaQR+oiCmUoFZpAlDeMqb5n6wEJw97Ffo1Guhm82rCCEHti3sbLsX07EyyuOrhDAca9KNVSDDsTewLuwq+RrHVhpS1Ssc56MNn791oHHatyZdy912uuZylY4LPnswoDIgFY8mg8bjhTWe2K6nN9AzXF3p80L/+g6Nx+5wfDEce1PXea5SD2LqKc7jjhHy4BqFoYW8EZGTr2irICyX1wNoFNYZD1JnNEB1x8X1KE7nlJXWa2i94Xk6wxiVxUL9Fai4NN76s3NSXxGBO+oWhXJH3VelIjgrhSI4y2JeF6FAX6EmdeEzGqFUPap7Uh1M/se61atfV2WjERbQG1IpHdfUv3Q/xkCgkhXvKySv/18U0EYwRc9aM3BxyW9Xs0X5rWnVVLKXK31Vy3y0Kd+SwflJNd7zE/naxO7AqbadgbNTumt8WWHIWbloPtqc+VXQXFK5iQF360BekLrgV7uniH41rJ36D54K5sfF1NVwp7BoBPpU1DeXuUJoPJ5PP9vuwJ7YY+/SdsfOcPAM7Wb7+Mc7s+/PMB7wUJ9vuIFU78A/llat61wrWH4X7upSdiL1qSp4PIp9hmXq1uHydRBB69YXLZGylsAZ58rMbrkCQ3iVk4tJ7AeYF9thVGkZb0DVm3zdibOSDVZG5VEmlhkvVEHL1xeSRDW1vJph688/ExSUhzT4teNulIo5Woky9PntzVF5iUbAT/xggR/MVNFYwt5Lh9gxQUr4AXqURVxnR89yV5MMMHKz7K6hD6zyaQlmAIZcpCrkdwxMAW3YM17uN29GBjqIpS+uv1p9ytJ7a45MQcoWPA5hL8/m+pVpB5etVIpWTGdl5uWDVLgMm6FP44fM7S7rli9aozu2IaKMygWGINMgQCmjNI4fjB88eZGF9Q/e5XVIBZhJ/RNEd27F02Cx81ucJBL89D66u4NPFZtyopnIZsznsEfI6q1O3tnDU/LfAAAA//8d1TAWIhAAAA==",
      "provisionSource": "H4sIAAAAAAAA/9RZbVPjOBL+7l/R6/GRZHZlx7zszUGZmuxg7lLLJhQB5qqAcQlbSVRxbI8kB1iS/34l+SV2kpkJXN3sDR+oRN3ql6cfqVuVNz9Z9zSy7jEfa1p/4BhNHjMBiIFFhG+9RYyEBHMCcxjhhwk0plj446bR/gWsT83uidM037ZahvUL4BY8Q8JoJEDEaZIQ1sQ3u3eAb/buWkdAHqmARaOlXf121bu88voDr9f5w3X07LuunZ51Lj90LpaCfEHXTtzfup3eUpB91zU6hJ+A+OMYdOO5bnYBxvOKQblUt7TQZVaMJIA+SxP9wUI/AjEmkQbwCiy8s+7v7ssBGVKZyc0NqAjAcTako8PdXRlaLrtwz9zOwHWMZsjvvSI2xABxZfSk/+F398KxUs5UjYPYnxBW+KobUV7td2Z7v+aJPCYSgX+eX3kn187+Qds8sM32rxoJOVkX2+/M/bbZ3pfOqyJ3cJlFEcY+Dq1oRgOKtd5196Tb8bIovWv3YtDt95xds23uaSuLtmnvmTayiz0f+r3LTrfnXngXV73L7h+u1FRb2ytmB1enp91/O1nqMr9/mLvI1s4vutedS9frnjtGE5o0AXTPAO0DDgIGfBw/ABHjNsznsEmG/0wZabdK9pzH0LgNfr41a/8arYyhEu2moimKQDeWvpf086HxqdGSRbCr8NfCHMdcRHhKANFWBeGljqb5cTSko5QRL2GEkc8p5VQQ3mzBswZAE28YswfMAi/BYuxYCYt9iz9xKyLCosls31qq1PU5EYJGI0ePiDClprkUOm1dA+BP3BehJyNw1GnJFky5IG1JIPKj5oL+yTZ0MJ5XIlqUiUN2rG04XlfSAIY0M7k0WFPLo11IF5W4quY5CQBRaFifNmZkWEFjZXPmdqFpOBFTzCYfO2c0Sh87IxKJHOAHTIW04eFEeGHsT7gGwIhgT/40AHu3DQewewA4EUhaAMOGBxxKK1hagflcxZYfUFudyXEcBrUjqcCRV8ffM5zCmnoafXnDO/UlS6KIKo9cfqWEO4Z9lGXBQ0ISx9g9AkGnJE6FY+wdAR/ToYCdnZUPEpqYAQUagdHk5DPYYOQmW0cQxMpxbgiM8sPz+4W0cc8InhTJZ+mDQQGRz6UVqKeT08N9JH4qSAC3uvH+VpebpG1eajEiUhaBXaCQ3VrZn8oQjGW2uURxK4gjdb991cuiRNGLYo8LLPiPCud/B1QFiBERnsDsHodhjoXAzPsaHpmywiNloWPsF7jrxnNl76IAVd8IT0WzAhFmgMSfQyWWXr4FT8XKiyAqSvBrG/yUhYCGfHAGhvoYl95fjyhRFMT3Ifk2wYY0JOp6XyJ6BDMc0gALGkceZiPuGAcVlLdDeA1do/AExor5/wULC4j3NkNcxFLq++NpHMDPjxtE28BfXuVy94tA1wASPCOBY8WJsNSkYPlhnAaIRlQgqclNpaFB3sBO1fRZ2JBtS8kljDkk7e1KUpprvHH7p41KiYqKaFsWo1aKSiE2Y1e9M/POqlsyBCvQawVQlFtGdXycZVoFvOydRVMd05DAMOWEgTXDzArpvRUkk5GcJifLJZwIK6Rc8Mq6j/0xURLM/DGdkVx4bAVkZkVpGMLu8Y5d4qfCa3zEVI4PCvBiqo6Hsm2DCqyhLZHYW1JGBi4Pa5oEWKxyxpYVlBqZ1ItTkaTCscQ0kfGhEREoE5lxumUH2DhulEN5/tQ5vej3Lt3eiRPFEY0EYdgXdJaVU6IICJVTIyAMCA1j5hO1GJCh0ssDBDQE9AQ04qK4zX6CZiHMold4whwEIWCs5VvOu3IEbN58dO8OzbetefOGuHeMmW9bht6CnZ2caz4Wm2ysXy6bFV9N9by0B2vUro8DK4lXxoKCCTlS33Eo+O6UyFOUd/BJMhkdHvYT2Qb44aGjV/epoRShKEb5DsSIH0+nJAq4JNX3Hl6yw7g8rt8c/tYS/nIu63Ni4StJ2Wj1Ztht1+iw117Swd4t7v0E+xM8Iqr478tq0/xSolwAKoIhQXHKjHxXDa4tSPQVIr2MTC8hVJVUCqYtKfVUprmBPltTaAON1qj0dTrl3FEpZ/zZhk15poozeRqbmRNQLqk6Yjj4Ymup6mxsMFIB5Qo/VJspX8x8HD/IB+5q86lmJjevdqEN0GzZi+BWq7WYTZYqxNtC/Xv1pRomFUrxJy7I1BehxwgXmImX9CfgMz/CU5K9017zTC3dQ4DJNI4QI2GMg28p57GCkQfwV710l+hxESc/BHQy0P8H3DLKyYhfAtvrsZK5I5Th8FelPSOMy2fxqHwRCMIF6EZT/TAwhMbf+G3UAN14r8Mc8t8brmEOY4IDQBHYLT37ScDWtYX25l/u2bl7MXD7p9p/AgAA//9scejXuxkAAA=="
    },
    "clusterKeyVaultName": "",
    "contributorRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
    "customCloudAuthenticationMethod": "client_secret",
    "customCloudIdentifySystem": "azure_ad",
    "enableHostsConfigAgent": false,
    "enableTelemetry": false,
    "etcdCaFilepath": "/etc/kubernetes/certs/ca.crt",
    "etcdClientCertFilepath": "/etc/kubernetes/certs/etcdclient.crt",
    "etcdClientKeyFilepath": "/etc/kubernetes/certs/etcdclient.key",
    "etcdPeerCertFilepath": [
      "/etc/kubernetes/certs/etcdpeer0.crt",
      "/etc/kubernetes/certs/etcdpeer1.crt",
      "/etc/kubernetes/certs/etcdpeer2.crt",
      "/etc/kubernetes/certs/etcdpeer3.crt",
      "/etc/kubernetes/certs/etcdpeer4.crt"
    ],
    "etcdPeerCertificates": [
      "[parameters('etcdPeerCertificate0')]",
      "[parameters('etcdPeerCertificate1')]",
      "[parameters('etcdPeerCertificate2')]"
    ],
    "etcdPeerKeyFilepath": [
      "/etc/kubernetes/certs/etcdpeer0.key",
      "/etc/kubernetes/certs/etcdpeer1.key",
      "/etc/kubernetes/certs/etcdpeer2.key",
      "/etc/kubernetes/certs/etcdpeer3.key",
      "/etc/kubernetes/certs/etcdpeer4.key"
    ],
    "etcdPeerPrivateKeys": [
      "[parameters('etcdPeerPrivateKey0')]",
      "[parameters('etcdPeerPrivateKey1')]",
      "[parameters('etcdPeerPrivateKey2')]"
    ],
    "etcdServerCertFilepath": "/etc/kubernetes/certs/etcdserver.crt",
    "etcdServerKeyFilepath": "/etc/kubernetes/certs/etcdserver.key",
    "excludeMasterFromStandardLB": "true",
    "kubeconfigServer": "[concat('https://', variables('kubernetesAPIServerIP'), ':443')]",
    "kubernetesAPIServerIP": "[concat(variables('masterFirstAddrPrefix'), add(variables('masterInternalLbIPOffset'), int(variables('masterFirstAddrOctet4'))))]",
    "labelResourceGroup": "[if(or(or(endsWith(variables('truncatedResourceGroup'), '-'), endsWith(variables('truncatedResourceGroup'), '_')), endsWith(variables('truncatedResourceGroup'), '.')), concat(take(variables('truncatedResourceGroup'), 62), 'z'), variables('truncatedResourceGroup'))]",
    "loadBalancerSku": "Standard",
    "location": "[variables('locations')[mod(add(2,length(parameters('location'))),add(1,length(parameters('location'))))]]",
    "locations": [
      "[resourceGroup().location]",
      "[parameters('location')]"
    ],
    "masterAvailabilitySet": "[concat('master-availabilityset-', parameters('nameSuffix'))]",
    "masterCount": 3,
    "masterEtcdClientPort": 2379,
    "masterEtcdClientURLs": [
      "[concat('https://', variables('masterPrivateIpAddrs')[0], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[1], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[2], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[3], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[4], ':', variables('masterEtcdClientPort'))]"
    ],
    "masterEtcdClusterStates": [
      "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0])]",
      "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0], ',', variables('masterVMNames')[1], '=', variables('masterEtcdPeerURLs')[1], ',', variables('masterVMNames')[2], '=', variables('masterEtcdPeerURLs')[2])]",
      "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0], ',', variables('masterVMNames')[1], '=', variables('masterEtcdPeerURLs')[1], ',', variables('masterVMNames')[2], '=', variables('masterEtcdPeerURLs')[2], ',', variables('masterVMNames')[3], '=', variables('masterEtcdPeerURLs')[3], ',', variables('masterVMNames')[4], '=', variables('masterEtcdPeerURLs')[4])]"
    ],
    "masterEtcdMetricURLs": [
      "[concat('http://', variables('masterPrivateIpAddrs')[0], ':2480')]",
      "[concat('http://', variables('masterPrivateIpAddrs')[1], ':2480')]",
      "[concat('http://', variables('masterPrivateIpAddrs')[2], ':2480')]",
      "[concat('http://', variables('masterPrivateIpAddrs')[3], ':2480')]",
      "[concat('http://', variables('masterPrivateIpAddrs')[4], ':2480')]"
    ],
    "masterEtcdPeerURLs": [
      "[concat('https://', variables('masterPrivateIpAddrs')[0], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[1], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[2], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[3], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[4], ':', variables('masterEtcdServerPort'))]"
    ],
    "masterEtcdServerPort": 2380,
    "masterFirstAddrComment": "these MasterFirstAddrComment are used to place multiple masters consecutively in the address space",
    "masterFirstAddrOctet4": "[variables('masterFirstAddrOctets')[3]]",
    "masterFirstAddrOctets": "[split(parameters('firstConsecutiveStaticIP'),'.')]",
    "masterFirstAddrPrefix": "[concat(variables('masterFirstAddrOctets')[0],'.',variables('masterFirstAddrOctets')[1],'.',variables('masterFirstAddrOctets')[2],'.')]",
    "masterFqdnPrefix": "aks-engine-workshop-cluster-6033eda0",
    "masterInternalLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterInternalLbName'))]",
    "masterInternalLbIPConfigID": "[concat(variables('masterInternalLbID'),'/frontendIPConfigurations/', variables('masterInternalLbIPConfigName'))]",
    "masterInternalLbIPConfigName": "[concat(parameters('orchestratorName'), '-master-internal-lbFrontEnd-', parameters('nameSuffix'))]",
    "masterInternalLbIPOffset": 10,
    "masterInternalLbName": "[concat(parameters('orchestratorName'), '-master-internal-lb-', parameters('nameSuffix'))]",
    "masterLbBackendPoolName": "[concat(parameters('orchestratorName'), '-master-pool-', parameters('nameSuffix'))]",
    "masterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
    "masterLbIPConfigID": "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
    "masterLbIPConfigName": "[concat(parameters('orchestratorName'), '-master-lbFrontEnd-', parameters('nameSuffix'))]",
    "masterLbName": "[concat(parameters('orchestratorName'), '-master-lb-', parameters('nameSuffix'))]",
    "masterOffset": "[parameters('masterOffset')]",
    "masterPrivateIpAddrs": [
      "[concat(variables('masterFirstAddrPrefix'), add(0, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(1, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(2, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(3, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(4, int(variables('masterFirstAddrOctet4'))))]"
    ],
    "masterPublicIPAddressName": "[concat(parameters('orchestratorName'), '-master-ip-', variables('masterFqdnPrefix'), '-', parameters('nameSuffix'))]",
    "masterVMNamePrefix": "k8s-master-20791455-",
    "masterVMNames": [
      "[concat(variables('masterVMNamePrefix'), '0')]",
      "[concat(variables('masterVMNamePrefix'), '1')]",
      "[concat(variables('masterVMNamePrefix'), '2')]",
      "[concat(variables('masterVMNamePrefix'), '3')]",
      "[concat(variables('masterVMNamePrefix'), '4')]"
    ],
    "maxVMsPerPool": 100,
    "maximumLoadBalancerRuleCount": 250,
    "networkContributorRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
    "nsgName": "[concat(variables('masterVMNamePrefix'), 'nsg')]",
    "orchestratorNameVersionTag": "Kubernetes:1.18.12",
    "primaryAvailabilitySetName": "",
    "primaryScaleSetName": "k8s-akesyspool-20791455-vmss",
    "provisionScriptParametersCommon": "[concat('ADMINUSER=azureuser APISERVER_PUBLIC_KEY=',parameters('apiServerCertificate'),' AUTHENTICATION_METHOD=client_secret CLOUDPROVIDER_BACKOFF=true CLOUDPROVIDER_BACKOFF_DURATION=5 CLOUDPROVIDER_BACKOFF_EXPONENT=0 CLOUDPROVIDER_BACKOFF_JITTER=0 CLOUDPROVIDER_BACKOFF_MODE=v2 CLOUDPROVIDER_BACKOFF_RETRIES=6 CLOUDPROVIDER_RATELIMIT=true CLOUDPROVIDER_RATELIMIT_BUCKET=300 CLOUDPROVIDER_RATELIMIT_BUCKET_WRITE=300 CLOUDPROVIDER_RATELIMIT_QPS=30 CLOUDPROVIDER_RATELIMIT_QPS_WRITE=30 CNI_PLUGINS_URL=https://kubernetesartifacts.azureedge.net/cni-plugins/v0.8.7/binaries/cni-plugins-linux-amd64-v0.8.7.tgz CONTAINERD_DOWNLOAD_URL_BASE=https://storage.googleapis.com/cri-containerd-release/ CONTAINERD_VERSION=1.3.7 CONTAINER_RUNTIME=docker CUSTOM_HYPERKUBE_IMAGE= ETCD_DOWNLOAD_URL=mcr.microsoft.com/oss/etcd-io/ ETCD_VERSION=3.3.22 EXCLUDE_MASTER_FROM_STANDARD_LB=true HYPERKUBE_URL=mcr.microsoft.com/ IDENTITY_SYSTEM=azure_ad IS_IPV6_ENABLED=false KMS_PROVIDER_VAULT_NAME=',variables('clusterKeyVaultName'),' KUBELET_PRIVATE_KEY=',parameters('clientPrivateKey'),' KUBERNETES_VERSION=1.18.12 KUBE_BINARY_URL= LOAD_BALANCER_DISABLE_OUTBOUND_SNAT=false LOAD_BALANCER_SKU=Standard LOCATION=',variables('location'),' MAXIMUM_LOADBALANCER_RULE_COUNT=250 MOBY_VERSION=19.03.12 MS_APT_REPO=https://packages.microsoft.com NETWORK_API_VERSION=2018-08-01 NETWORK_MODE=transparent NETWORK_PLUGIN=azure NETWORK_POLICY=azure NETWORK_SECURITY_GROUP=k8s-master-20791455-nsg PRIMARY_AVAILABILITY_SET= PRIMARY_SCALE_SET=k8s-akesyspool-20791455-vmss RESOURCE_GROUP=',variables('resourceGroup'),' ROUTE_TABLE=k8s-master-20791455-routetable SERVICE_PRINCIPAL_CLIENT_ID=',variables('servicePrincipalClientId'),' SERVICE_PRINCIPAL_CLIENT_SECRET=',variables('singleQuote'),'',variables('servicePrincipalClientSecret'),'',variables('singleQuote'),' SUBNET=aks-engine-workshop-subnet SUBSCRIPTION_ID=',variables('subscriptionId'),' TENANT_ID=',variables('tenantID'),' USE_INSTANCE_METADATA=true USE_MANAGED_IDENTITY_EXTENSION=true VIRTUAL_NETWORK=aks-engine-workshop-vnet VIRTUAL_NETWORK_RESOURCE_GROUP=aks-engine-workshop-rg VM_TYPE=vmss VNET_CNI_PLUGINS_URL=https://kubernetesartifacts.azureedge.net/azure-cni/v1.2.0/binaries/azure-vnet-cni-linux-amd64-v1.2.0.tgz ')]",
    "provisionScriptParametersMaster": "[concat('COSMOS_URI= MASTER_VM_NAME=',variables('masterVMNames')[variables('masterOffset')],' ETCD_PEER_URL=',variables('masterEtcdPeerURLs')[variables('masterOffset')],' ETCD_CLIENT_URL=',variables('masterEtcdClientURLs')[variables('masterOffset')],' MASTER_NODE=true NO_OUTBOUND=false AUDITD_ENABLED=false CLUSTER_AUTOSCALER_ADDON=true ACI_CONNECTOR_ADDON=',parameters('kubernetesACIConnectorEnabled'),' APISERVER_PRIVATE_KEY=',parameters('apiServerPrivateKey'),' CA_CERTIFICATE=',parameters('caCertificate'),' CA_PRIVATE_KEY=',parameters('caPrivateKey'),' MASTER_FQDN=',variables('masterFqdnPrefix'),' KUBECONFIG_CERTIFICATE=',parameters('kubeConfigCertificate'),' KUBECONFIG_KEY=',parameters('kubeConfigPrivateKey'),' ETCD_SERVER_CERTIFICATE=',parameters('etcdServerCertificate'),' ETCD_CLIENT_CERTIFICATE=',parameters('etcdClientCertificate'),' ETCD_SERVER_PRIVATE_KEY=',parameters('etcdServerPrivateKey'),' ETCD_CLIENT_PRIVATE_KEY=',parameters('etcdClientPrivateKey'),' ETCD_PEER_CERTIFICATES=',string(variables('etcdPeerCertificates')),' ETCD_PEER_PRIVATE_KEYS=',string(variables('etcdPeerPrivateKeys')),' ENABLE_AGGREGATED_APIS=',string(parameters('enableAggregatedAPIs')),' KUBECONFIG_SERVER=',variables('kubeconfigServer'))]",
    "readerRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
    "resourceGroup": "[resourceGroup().name]",
    "routeTableID": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]",
    "routeTableName": "[concat(variables('masterVMNamePrefix'),'routetable')]",
    "scope": "[resourceGroup().id]",
    "servicePrincipalClientId": "msi",
    "servicePrincipalClientSecret": "msi",
    "singleQuote": "'",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "sshNatPorts": [
      22,
      2201,
      2202,
      2203,
      2204
    ],
    "storageAccountBaseName": "",
    "storageAccountPrefixes": [],
    "subnetName": "aks-engine-workshop-subnet",
    "subscriptionId": "[subscription().subscriptionId]",
    "tenantId": "[subscription().tenantId]",
    "truncatedResourceGroup": "[take(replace(replace(resourceGroup().name, '(', '-'), ')', '-'), 63)]",
    "useInstanceMetadata": "true",
    "useManagedIdentityExtension": "true",
    "userAssignedClientID": "",
    "userAssignedID": "",
    "userAssignedIDReference": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('userAssignedID'))]",
    "virtualNetworkName": "[split(parameters('masterVnetSubnetID'), '/')[variables('vnetNameResourceSegmentIndex')]]",
    "virtualNetworkResourceGroupName": "[split(parameters('masterVnetSubnetID'), '/')[variables('vnetResourceGroupNameResourceSegmentIndex')]]",
    "vmType": "vmss",
    "vnetNameResourceSegmentIndex": 8,
    "vnetResourceGroupNameResourceSegmentIndex": 4,
    "vnetSubnetID": "[parameters('masterVnetSubnetID')]",
    "windowsCSIProxyURL": "",
    "windowsEnableCSIProxy": false,
    "windowsPauseImageURL": "",
    "windowsProvisioningScriptsPackageURL": ""
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersionNetwork')]",
      "location": "[variables('location')]",
      "name": "[variables('agentPublicIPAddressName')]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      },
      "sku": {
        "name": "[variables('loadBalancerSku')]"
      },
      "tags": null,
      "type": "Microsoft.Network/publicIPAddresses"
    },
    {
      "apiVersion": "[variables('apiVersionNetwork')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('agentPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[variables('agentLbName')]",
      "properties": {
        "backendAddressPools": [
          {
            "name": "[variables('agentLbBackendPoolName')]"
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "[variables('agentLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses',variables('agentPublicIPAddressName'))]"
              }
            }
          }
        ],
        "outboundRules": [
          {
            "name": "LBOutboundRule",
            "properties": {
              "allocatedOutboundPorts": 0,
              "backendAddressPool": {
                "id": "[concat(variables('agentLbID'), '/backendAddressPools/', variables('agentLbBackendPoolName'))]"
              },
              "enableTcpReset": true,
              "frontendIPConfigurations": [
                {
                  "id": "[variables('agentLbIPConfigID')]"
                }
              ],
              "idleTimeoutInMinutes": 30,
              "protocol": "All"
            }
          }
        ]
      },
      "sku": {
        "name": "[variables('loadBalancerSku')]"
      },
      "tags": null,
      "type": "Microsoft.Network/loadBalancers"
    },
    {
      "apiVersion": "[variables('apiVersionAuthorizationSystem')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('akesyspoolVMNamePrefix'))]"
      ],
      "name": "[guid(concat('Microsoft.Compute/virtualMachineScaleSets/', variables('akesyspoolVMNamePrefix'), 'vmidentity'))]",
      "properties": {
        "principalId": "[reference(concat('Microsoft.Compute/virtualMachineScaleSets/', variables('akesyspoolVMNamePrefix')), '2017-03-30', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal",
        "roleDefinitionId": "[variables('readerRoleDefinitionId')]"
      },
      "type": "Microsoft.Authorization/roleAssignments"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "dependsOn": [
        "[variables('nsgID')]",
        "[variables('agentLbID')]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "location": "[variables('location')]",
      "name": "[variables('akesyspoolVMNamePrefix')]",
      "properties": {
        "overprovision": false,
        "singlePlacementGroup": false,
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "extensionProfile": {
            "extensions": [
              {
                "name": "vmssCSE",
                "properties": {
                  "autoUpgradeMinorVersion": true,
                  "protectedSettings": {
                    "commandToExecute": "[concat('echo $(date),$(hostname); for i in $(seq 1 1200); do grep -Fq \"EOF\" /opt/azure/containers/provision.sh && break; if [ $i -eq 1200 ]; then exit 100; else sleep 1; fi; done; ', variables('provisionScriptParametersCommon'),' USER_ASSIGNED_IDENTITY_ID=',' ',' IS_VHD=true GPU_NODE=false SGX_NODE=false AUDITD_ENABLED=false /usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/provision.sh >> /var/log/azure/cluster-provision.log 2>&1\"')]"
                  },
                  "publisher": "Microsoft.Azure.Extensions",
                  "settings": {},
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0"
                }
              },
              {
                "name": "[concat(variables('akesyspoolVMNamePrefix'), '-computeAksLinuxBilling')]",
                "properties": {
                  "autoUpgradeMinorVersion": true,
                  "publisher": "Microsoft.AKS",
                  "settings": {},
                  "type": "Compute.AKS-Engine.Linux.Billing",
                  "typeHandlerVersion": "1.0"
                }
              }
            ]
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('akesyspoolVMNamePrefix')]",
                "properties": {
                  "enableAcceleratedNetworking": true,
                  "ipConfigurations": [
                    {
                      "name": "ipconfig1",
                      "properties": {
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat(variables('agentLbID'), '/backendAddressPools/', variables('agentLbBackendPoolName'))]"
                          }
                        ],
                        "primary": true,
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig2",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig3",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig4",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig5",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig6",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig7",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig8",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig9",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig10",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig11",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig12",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig13",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig14",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig15",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig16",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig17",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig18",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig19",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig20",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig21",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig22",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig23",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig24",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig25",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig26",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig27",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig28",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig29",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig30",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig31",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akesyspoolVnetSubnetID')]"
                        }
                      }
                    }
                  ],
                  "networkSecurityGroup": {
                    "id": "[variables('nsgID')]"
                  },
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "[parameters('linuxAdminUsername')]",
            "computerNamePrefix": "[variables('akesyspoolVMNamePrefix')]",
            "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: /opt/azure/needs_azure.json\n  permissions: \"0644\"\n  owner: root\n  content: |\n    #EOF\n\n\n- path: /opt/azure/containers/provision_source.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionSource,'\n\n- path: /opt/azure/containers/provision.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionScript,'\n\n- path: /opt/azure/containers/provision_installs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionInstalls,'\n\n- path: /opt/azure/containers/provision_configs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionConfigs,'\n\n- path: /etc/systemd/system/kubelet-monitor.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').kubeletMonitorSystemdService,'\n- path: /usr/local/bin/health-monitor.sh\n  permissions: \"0544\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').healthMonitorScript,'\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').kubeletSystemdService,'\n\n- path: /etc/systemd/system/docker-monitor.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').dockerMonitorSystemdService,'\n\n- path: /etc/apt/apt.conf.d/99periodic\n  permissions: \"0644\"\n  owner: root\n  content: |\n    APT::Periodic::Update-Package-Lists \"0\";\n    APT::Periodic::Download-Upgradeable-Packages \"0\";\n    APT::Periodic::AutocleanInterval \"0\";\n    APT::Periodic::Unattended-Upgrade \"0\";\n\n- path: /etc/systemd/system/docker.service.d/exec_start.conf\n  permissions: \"0644\"\n  owner: root\n  content: |\n    [Service]\n    Restart=always\n    ExecStart=\n    ExecStart=/usr/bin/dockerd -H fd:// --storage-driver=overlay2 --bip=',parameters('dockerBridgeCidr'),'\n    ExecStartPost=/sbin/iptables -P FORWARD ACCEPT\n    #EOF\n\n- path: /etc/docker/daemon.json\n  permissions: \"0644\"\n  owner: root\n  content: |\n    {\n        \"live-restore\": true,\n        \"log-driver\": \"json-file\",\n        \"log-opts\": {\n            \"max-size\": \"50m\",\n            \"max-file\": \"5\"\n        }\n    }\n\n\n\n- path: /etc/sysctl.d/11-aks-engine.conf\n  permissions: \"0644\"\n  owner: root\n  content: |\n    net.core.message_burst = 80\n    net.core.message_cost = 40\n    net.core.somaxconn = 16384\n    net.ipv4.neigh.default.gc_thresh1 = 4096\n    net.ipv4.neigh.default.gc_thresh2 = 8192\n    net.ipv4.neigh.default.gc_thresh3 = 16384\n    net.ipv4.tcp_max_syn_backlog = 16384\n    net.ipv4.tcp_retries2 = 8\n    #EOF\n\n- path: /etc/kubernetes/certs/ca.crt\n  permissions: \"0644\"\n  encoding: base64\n  owner: root\n  content: |\n    ',parameters('caCertificate'),'\n\n- path: /etc/kubernetes/certs/client.crt\n  permissions: \"0644\"\n  encoding: base64\n  owner: root\n  content: |\n    ',parameters('clientCertificate'),'\n\n- path: /var/lib/kubelet/kubeconfig\n  permissions: \"0644\"\n  owner: root\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n        server: https://',variables('kubernetesAPIServerIP'),':443\n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n    #EOF\n\n- path: /etc/default/kubelet\n  permissions: \"0644\"\n  owner: root\n  content: |\n    KUBELET_CONFIG=--address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available<750Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates=RotateKubeletServerCertificate=true --healthz-port=10248 --image-gc-high-threshold=85 --image-gc-low-threshold=80 --image-pull-progress-deadline=30m --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=30 --network-plugin=cni --node-status-update-frequency=10s --non-masquerade-cidr=0.0.0.0/0 --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:1.4.0 --pod-manifest-path=/etc/kubernetes/manifests --pod-max-pids=-1 --protect-kernel-defaults=true --read-only-port=0 --resolv-conf=/run/systemd/resolve/resolv.conf --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins \n    KUBELET_NODE_LABELS=kubernetes.azure.com/role=agent,agentpool=akesyspool,storageprofile=managed,storagetier=Premium_LRS,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n    #EOF\n\n- path: /opt/azure/containers/kubelet.sh\n  permissions: \"0755\"\n  owner: root\n  content: |\n    #!/bin/bash\n    MOUNT_DIR=/var/lib/kubelet\n    mkdir -p $MOUNT_DIR /var/lib/cni\n    if ! [[ $(findmnt -rno SOURCE,TARGET ${MOUNT_DIR}) ]]; then\n      mount --bind $MOUNT_DIR $MOUNT_DIR\n    fi\n    mount --make-shared $MOUNT_DIR\n    #EOF\nruncmd:\n- set -x\n- source /opt/azure/containers/provision_source.sh\n- aptmarkWALinuxAgent hold\n'))]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "keyData": "[parameters('sshRSAPublicKey')]",
                    "path": "[variables('sshKeyPath')]"
                  }
                ]
              }
            }
          },
          "storageProfile": {
            "dataDisks": null,
            "imageReference": {
              "offer": "[variables('akesyspoolosImageOffer')]",
              "publisher": "[variables('akesyspoolosImagePublisher')]",
              "sku": "[variables('akesyspoolosImageSKU')]",
              "version": "[variables('akesyspoolosImageVersion')]"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          }
        }
      },
      "sku": {
        "capacity": 2,
        "name": "[variables('akesyspoolVMSize')]",
        "tier": "Standard"
      },
      "tags": {
        "aksEngineVersion": "[parameters('aksEngineVersion')]",
        "creationSource": "[concat(parameters('generatorCode'), '-', variables('akesyspoolVMNamePrefix'))]",
        "orchestrator": "[variables('orchestratorNameVersionTag')]",
        "poolName": "akesyspool",
        "resourceNameSuffix": "[parameters('nameSuffix')]"
      },
      "type": "Microsoft.Compute/virtualMachineScaleSets"
    },
    {
      "apiVersion": "[variables('apiVersionAuthorizationSystem')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('akeapipoolVMNamePrefix'))]"
      ],
      "name": "[guid(concat('Microsoft.Compute/virtualMachineScaleSets/', variables('akeapipoolVMNamePrefix'), 'vmidentity'))]",
      "properties": {
        "principalId": "[reference(concat('Microsoft.Compute/virtualMachineScaleSets/', variables('akeapipoolVMNamePrefix')), '2017-03-30', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal",
        "roleDefinitionId": "[variables('readerRoleDefinitionId')]"
      },
      "type": "Microsoft.Authorization/roleAssignments"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "dependsOn": [
        "[variables('nsgID')]",
        "[variables('agentLbID')]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "location": "[variables('location')]",
      "name": "[variables('akeapipoolVMNamePrefix')]",
      "properties": {
        "overprovision": false,
        "singlePlacementGroup": false,
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "extensionProfile": {
            "extensions": [
              {
                "name": "vmssCSE",
                "properties": {
                  "autoUpgradeMinorVersion": true,
                  "protectedSettings": {
                    "commandToExecute": "[concat('echo $(date),$(hostname); for i in $(seq 1 1200); do grep -Fq \"EOF\" /opt/azure/containers/provision.sh && break; if [ $i -eq 1200 ]; then exit 100; else sleep 1; fi; done; ', variables('provisionScriptParametersCommon'),' USER_ASSIGNED_IDENTITY_ID=',' ',' IS_VHD=true GPU_NODE=false SGX_NODE=false AUDITD_ENABLED=false /usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/provision.sh >> /var/log/azure/cluster-provision.log 2>&1\"')]"
                  },
                  "publisher": "Microsoft.Azure.Extensions",
                  "settings": {},
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0"
                }
              },
              {
                "name": "[concat(variables('akeapipoolVMNamePrefix'), '-computeAksLinuxBilling')]",
                "properties": {
                  "autoUpgradeMinorVersion": true,
                  "publisher": "Microsoft.AKS",
                  "settings": {},
                  "type": "Compute.AKS-Engine.Linux.Billing",
                  "typeHandlerVersion": "1.0"
                }
              }
            ]
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('akeapipoolVMNamePrefix')]",
                "properties": {
                  "enableAcceleratedNetworking": true,
                  "ipConfigurations": [
                    {
                      "name": "ipconfig1",
                      "properties": {
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat(variables('agentLbID'), '/backendAddressPools/', variables('agentLbBackendPoolName'))]"
                          }
                        ],
                        "primary": true,
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig2",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig3",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig4",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig5",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig6",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig7",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig8",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig9",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig10",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig11",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig12",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig13",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig14",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig15",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig16",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig17",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig18",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig19",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig20",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig21",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig22",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig23",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig24",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig25",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig26",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig27",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig28",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig29",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig30",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig31",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeapipoolVnetSubnetID')]"
                        }
                      }
                    }
                  ],
                  "networkSecurityGroup": {
                    "id": "[variables('nsgID')]"
                  },
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "[parameters('linuxAdminUsername')]",
            "computerNamePrefix": "[variables('akeapipoolVMNamePrefix')]",
            "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: /opt/azure/needs_azure.json\n  permissions: \"0644\"\n  owner: root\n  content: |\n    #EOF\n\n\n- path: /opt/azure/containers/provision_source.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionSource,'\n\n- path: /opt/azure/containers/provision.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionScript,'\n\n- path: /opt/azure/containers/provision_installs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionInstalls,'\n\n- path: /opt/azure/containers/provision_configs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionConfigs,'\n\n- path: /etc/systemd/system/kubelet-monitor.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').kubeletMonitorSystemdService,'\n- path: /usr/local/bin/health-monitor.sh\n  permissions: \"0544\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').healthMonitorScript,'\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').kubeletSystemdService,'\n\n- path: /etc/systemd/system/docker-monitor.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').dockerMonitorSystemdService,'\n\n- path: /etc/apt/apt.conf.d/99periodic\n  permissions: \"0644\"\n  owner: root\n  content: |\n    APT::Periodic::Update-Package-Lists \"0\";\n    APT::Periodic::Download-Upgradeable-Packages \"0\";\n    APT::Periodic::AutocleanInterval \"0\";\n    APT::Periodic::Unattended-Upgrade \"0\";\n\n- path: /etc/systemd/system/docker.service.d/exec_start.conf\n  permissions: \"0644\"\n  owner: root\n  content: |\n    [Service]\n    Restart=always\n    ExecStart=\n    ExecStart=/usr/bin/dockerd -H fd:// --storage-driver=overlay2 --bip=',parameters('dockerBridgeCidr'),'\n    ExecStartPost=/sbin/iptables -P FORWARD ACCEPT\n    #EOF\n\n- path: /etc/docker/daemon.json\n  permissions: \"0644\"\n  owner: root\n  content: |\n    {\n        \"live-restore\": true,\n        \"log-driver\": \"json-file\",\n        \"log-opts\": {\n            \"max-size\": \"50m\",\n            \"max-file\": \"5\"\n        }\n    }\n\n\n\n- path: /etc/sysctl.d/11-aks-engine.conf\n  permissions: \"0644\"\n  owner: root\n  content: |\n    net.core.message_burst = 80\n    net.core.message_cost = 40\n    net.core.somaxconn = 16384\n    net.ipv4.neigh.default.gc_thresh1 = 4096\n    net.ipv4.neigh.default.gc_thresh2 = 8192\n    net.ipv4.neigh.default.gc_thresh3 = 16384\n    net.ipv4.tcp_max_syn_backlog = 16384\n    net.ipv4.tcp_retries2 = 8\n    #EOF\n\n- path: /etc/kubernetes/certs/ca.crt\n  permissions: \"0644\"\n  encoding: base64\n  owner: root\n  content: |\n    ',parameters('caCertificate'),'\n\n- path: /etc/kubernetes/certs/client.crt\n  permissions: \"0644\"\n  encoding: base64\n  owner: root\n  content: |\n    ',parameters('clientCertificate'),'\n\n- path: /var/lib/kubelet/kubeconfig\n  permissions: \"0644\"\n  owner: root\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n        server: https://',variables('kubernetesAPIServerIP'),':443\n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n    #EOF\n\n- path: /etc/default/kubelet\n  permissions: \"0644\"\n  owner: root\n  content: |\n    KUBELET_CONFIG=--address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available<750Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates=RotateKubeletServerCertificate=true --healthz-port=10248 --image-gc-high-threshold=85 --image-gc-low-threshold=80 --image-pull-progress-deadline=30m --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=30 --network-plugin=cni --node-status-update-frequency=10s --non-masquerade-cidr=0.0.0.0/0 --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:1.4.0 --pod-manifest-path=/etc/kubernetes/manifests --pod-max-pids=-1 --protect-kernel-defaults=true --read-only-port=0 --resolv-conf=/run/systemd/resolve/resolv.conf --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins \n    KUBELET_NODE_LABELS=kubernetes.azure.com/role=agent,agentpool=akeapipool,storageprofile=managed,storagetier=Premium_LRS,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n    #EOF\n\n- path: /opt/azure/containers/kubelet.sh\n  permissions: \"0755\"\n  owner: root\n  content: |\n    #!/bin/bash\n    MOUNT_DIR=/var/lib/kubelet\n    mkdir -p $MOUNT_DIR /var/lib/cni\n    if ! [[ $(findmnt -rno SOURCE,TARGET ${MOUNT_DIR}) ]]; then\n      mount --bind $MOUNT_DIR $MOUNT_DIR\n    fi\n    mount --make-shared $MOUNT_DIR\n    #EOF\nruncmd:\n- set -x\n- source /opt/azure/containers/provision_source.sh\n- aptmarkWALinuxAgent hold\n'))]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "keyData": "[parameters('sshRSAPublicKey')]",
                    "path": "[variables('sshKeyPath')]"
                  }
                ]
              }
            }
          },
          "storageProfile": {
            "dataDisks": null,
            "imageReference": {
              "offer": "[variables('akeapipoolosImageOffer')]",
              "publisher": "[variables('akeapipoolosImagePublisher')]",
              "sku": "[variables('akeapipoolosImageSKU')]",
              "version": "[variables('akeapipoolosImageVersion')]"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          }
        }
      },
      "sku": {
        "capacity": 2,
        "name": "[variables('akeapipoolVMSize')]",
        "tier": "Standard"
      },
      "tags": {
        "aksEngineVersion": "[parameters('aksEngineVersion')]",
        "creationSource": "[concat(parameters('generatorCode'), '-', variables('akeapipoolVMNamePrefix'))]",
        "orchestrator": "[variables('orchestratorNameVersionTag')]",
        "poolName": "akeapipool",
        "resourceNameSuffix": "[parameters('nameSuffix')]"
      },
      "type": "Microsoft.Compute/virtualMachineScaleSets"
    },
    {
      "apiVersion": "[variables('apiVersionAuthorizationSystem')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('akeiotpoolVMNamePrefix'))]"
      ],
      "name": "[guid(concat('Microsoft.Compute/virtualMachineScaleSets/', variables('akeiotpoolVMNamePrefix'), 'vmidentity'))]",
      "properties": {
        "principalId": "[reference(concat('Microsoft.Compute/virtualMachineScaleSets/', variables('akeiotpoolVMNamePrefix')), '2017-03-30', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal",
        "roleDefinitionId": "[variables('readerRoleDefinitionId')]"
      },
      "type": "Microsoft.Authorization/roleAssignments"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "dependsOn": [
        "[variables('nsgID')]",
        "[variables('agentLbID')]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "location": "[variables('location')]",
      "name": "[variables('akeiotpoolVMNamePrefix')]",
      "properties": {
        "overprovision": false,
        "singlePlacementGroup": false,
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "extensionProfile": {
            "extensions": [
              {
                "name": "vmssCSE",
                "properties": {
                  "autoUpgradeMinorVersion": true,
                  "protectedSettings": {
                    "commandToExecute": "[concat('echo $(date),$(hostname); for i in $(seq 1 1200); do grep -Fq \"EOF\" /opt/azure/containers/provision.sh && break; if [ $i -eq 1200 ]; then exit 100; else sleep 1; fi; done; ', variables('provisionScriptParametersCommon'),' USER_ASSIGNED_IDENTITY_ID=',' ',' IS_VHD=true GPU_NODE=false SGX_NODE=false AUDITD_ENABLED=false /usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/provision.sh >> /var/log/azure/cluster-provision.log 2>&1\"')]"
                  },
                  "publisher": "Microsoft.Azure.Extensions",
                  "settings": {},
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0"
                }
              },
              {
                "name": "[concat(variables('akeiotpoolVMNamePrefix'), '-computeAksLinuxBilling')]",
                "properties": {
                  "autoUpgradeMinorVersion": true,
                  "publisher": "Microsoft.AKS",
                  "settings": {},
                  "type": "Compute.AKS-Engine.Linux.Billing",
                  "typeHandlerVersion": "1.0"
                }
              }
            ]
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('akeiotpoolVMNamePrefix')]",
                "properties": {
                  "enableAcceleratedNetworking": true,
                  "ipConfigurations": [
                    {
                      "name": "ipconfig1",
                      "properties": {
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat(variables('agentLbID'), '/backendAddressPools/', variables('agentLbBackendPoolName'))]"
                          }
                        ],
                        "primary": true,
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig2",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig3",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig4",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig5",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig6",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig7",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig8",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig9",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig10",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig11",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig12",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig13",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig14",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig15",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig16",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig17",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig18",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig19",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig20",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig21",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig22",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig23",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig24",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig25",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig26",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig27",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig28",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig29",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig30",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    },
                    {
                      "name": "ipconfig31",
                      "properties": {
                        "subnet": {
                          "id": "[variables('akeiotpoolVnetSubnetID')]"
                        }
                      }
                    }
                  ],
                  "networkSecurityGroup": {
                    "id": "[variables('nsgID')]"
                  },
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminUsername": "[parameters('linuxAdminUsername')]",
            "computerNamePrefix": "[variables('akeiotpoolVMNamePrefix')]",
            "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: /opt/azure/needs_azure.json\n  permissions: \"0644\"\n  owner: root\n  content: |\n    #EOF\n\n\n- path: /opt/azure/containers/provision_source.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionSource,'\n\n- path: /opt/azure/containers/provision.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionScript,'\n\n- path: /opt/azure/containers/provision_installs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionInstalls,'\n\n- path: /opt/azure/containers/provision_configs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionConfigs,'\n\n- path: /etc/systemd/system/kubelet-monitor.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').kubeletMonitorSystemdService,'\n- path: /usr/local/bin/health-monitor.sh\n  permissions: \"0544\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').healthMonitorScript,'\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').kubeletSystemdService,'\n\n- path: /etc/systemd/system/docker-monitor.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').dockerMonitorSystemdService,'\n\n- path: /etc/apt/apt.conf.d/99periodic\n  permissions: \"0644\"\n  owner: root\n  content: |\n    APT::Periodic::Update-Package-Lists \"0\";\n    APT::Periodic::Download-Upgradeable-Packages \"0\";\n    APT::Periodic::AutocleanInterval \"0\";\n    APT::Periodic::Unattended-Upgrade \"0\";\n\n- path: /etc/systemd/system/docker.service.d/exec_start.conf\n  permissions: \"0644\"\n  owner: root\n  content: |\n    [Service]\n    Restart=always\n    ExecStart=\n    ExecStart=/usr/bin/dockerd -H fd:// --storage-driver=overlay2 --bip=',parameters('dockerBridgeCidr'),'\n    ExecStartPost=/sbin/iptables -P FORWARD ACCEPT\n    #EOF\n\n- path: /etc/docker/daemon.json\n  permissions: \"0644\"\n  owner: root\n  content: |\n    {\n        \"live-restore\": true,\n        \"log-driver\": \"json-file\",\n        \"log-opts\": {\n            \"max-size\": \"50m\",\n            \"max-file\": \"5\"\n        }\n    }\n\n\n\n- path: /etc/sysctl.d/11-aks-engine.conf\n  permissions: \"0644\"\n  owner: root\n  content: |\n    net.core.message_burst = 80\n    net.core.message_cost = 40\n    net.core.somaxconn = 16384\n    net.ipv4.neigh.default.gc_thresh1 = 4096\n    net.ipv4.neigh.default.gc_thresh2 = 8192\n    net.ipv4.neigh.default.gc_thresh3 = 16384\n    net.ipv4.tcp_max_syn_backlog = 16384\n    net.ipv4.tcp_retries2 = 8\n    #EOF\n\n- path: /etc/kubernetes/certs/ca.crt\n  permissions: \"0644\"\n  encoding: base64\n  owner: root\n  content: |\n    ',parameters('caCertificate'),'\n\n- path: /etc/kubernetes/certs/client.crt\n  permissions: \"0644\"\n  encoding: base64\n  owner: root\n  content: |\n    ',parameters('clientCertificate'),'\n\n- path: /var/lib/kubelet/kubeconfig\n  permissions: \"0644\"\n  owner: root\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n        server: https://',variables('kubernetesAPIServerIP'),':443\n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n    #EOF\n\n- path: /etc/default/kubelet\n  permissions: \"0644\"\n  owner: root\n  content: |\n    KUBELET_CONFIG=--address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available<750Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates=RotateKubeletServerCertificate=true --healthz-port=10248 --image-gc-high-threshold=85 --image-gc-low-threshold=80 --image-pull-progress-deadline=30m --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=30 --network-plugin=cni --node-status-update-frequency=10s --non-masquerade-cidr=0.0.0.0/0 --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:1.4.0 --pod-manifest-path=/etc/kubernetes/manifests --pod-max-pids=-1 --protect-kernel-defaults=true --read-only-port=0 --resolv-conf=/run/systemd/resolve/resolv.conf --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins \n    KUBELET_NODE_LABELS=kubernetes.azure.com/role=agent,agentpool=akeiotpool,storageprofile=managed,storagetier=Premium_LRS,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n    #EOF\n\n- path: /opt/azure/containers/kubelet.sh\n  permissions: \"0755\"\n  owner: root\n  content: |\n    #!/bin/bash\n    MOUNT_DIR=/var/lib/kubelet\n    mkdir -p $MOUNT_DIR /var/lib/cni\n    if ! [[ $(findmnt -rno SOURCE,TARGET ${MOUNT_DIR}) ]]; then\n      mount --bind $MOUNT_DIR $MOUNT_DIR\n    fi\n    mount --make-shared $MOUNT_DIR\n    #EOF\nruncmd:\n- set -x\n- source /opt/azure/containers/provision_source.sh\n- aptmarkWALinuxAgent hold\n'))]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "keyData": "[parameters('sshRSAPublicKey')]",
                    "path": "[variables('sshKeyPath')]"
                  }
                ]
              }
            }
          },
          "storageProfile": {
            "dataDisks": null,
            "imageReference": {
              "offer": "[variables('akeiotpoolosImageOffer')]",
              "publisher": "[variables('akeiotpoolosImagePublisher')]",
              "sku": "[variables('akeiotpoolosImageSKU')]",
              "version": "[variables('akeiotpoolosImageVersion')]"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          }
        }
      },
      "sku": {
        "capacity": 2,
        "name": "[variables('akeiotpoolVMSize')]",
        "tier": "Standard"
      },
      "tags": {
        "aksEngineVersion": "[parameters('aksEngineVersion')]",
        "creationSource": "[concat(parameters('generatorCode'), '-', variables('akeiotpoolVMNamePrefix'))]",
        "orchestrator": "[variables('orchestratorNameVersionTag')]",
        "poolName": "akeiotpool",
        "resourceNameSuffix": "[parameters('nameSuffix')]"
      },
      "type": "Microsoft.Compute/virtualMachineScaleSets"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "location": "[variables('location')]",
      "name": "[variables('masterAvailabilitySet')]",
      "properties": {
        "platformFaultDomainCount": "[if(contains(split('canadacentral,centralus,eastus,eastus2,northcentralus,northeurope,southcentralus,westeurope,westus',','),variables('location')),3,if(equals('centraluseuap',variables('location')),1,2))]",
        "platformUpdateDomainCount": 3
      },
      "sku": {
        "name": "Aligned"
      },
      "tags": null,
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionNetwork')]",
      "location": "[variables('location')]",
      "name": "[variables('nsgName')]",
      "properties": {
        "securityRules": [
          {
            "name": "allow_ssh",
            "properties": {
              "access": "Allow",
              "description": "Allow SSH traffic to master",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22-22",
              "direction": "Inbound",
              "priority": 101,
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "allow_kube_tls",
            "properties": {
              "access": "Allow",
              "description": "Allow kube-apiserver (tls) traffic to master",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "443-443",
              "direction": "Inbound",
              "priority": 100,
              "protocol": "Tcp",
              "sourceAddressPrefix": "VirtualNetwork",
              "sourcePortRange": "*"
            }
          }
        ]
      },
      "tags": null,
      "type": "Microsoft.Network/networkSecurityGroups"
    },
    {
      "apiVersion": "[variables('apiVersionNetwork')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "nicLoopNode"
      },
      "dependsOn": [
        "[variables('nsgID')]",
        "[variables('masterInternalLbName')]",
        "[variables('masterLbName')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), 'nic-', copyIndex(variables('masterOffset')))]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('masterInternalLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                },
                {
                  "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": [],
              "primary": true,
              "privateIPAddress": "[variables('masterPrivateIpAddrs')[copyIndex(variables('masterOffset'))]]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig2",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig3",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig4",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig5",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig6",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig7",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig8",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig9",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig10",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig11",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig12",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig13",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig14",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig15",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig16",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig17",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig18",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig19",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig20",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig21",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig22",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig23",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig24",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig25",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig26",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig27",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig28",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig29",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig30",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig31",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('nsgID')]"
        }
      },
      "tags": null,
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionNetwork')]",
      "location": "[variables('location')]",
      "name": "[variables('masterPublicIPAddressName')]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      },
      "sku": {
        "name": "[variables('loadBalancerSku')]"
      },
      "tags": null,
      "type": "Microsoft.Network/publicIPAddresses"
    },
    {
      "apiVersion": "[variables('apiVersionNetwork')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[variables('masterLbName')]",
      "properties": {
        "backendAddressPools": [
          {
            "name": "[variables('masterLbBackendPoolName')]"
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "[variables('masterLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses',variables('masterPublicIPAddressName'))]"
              }
            }
          }
        ],
        "outboundRules": [
          {
            "name": "LBOutboundRule",
            "properties": {
              "allocatedOutboundPorts": 0,
              "backendAddressPool": {
                "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
              },
              "enableTcpReset": true,
              "frontendIPConfigurations": [
                {
                  "id": "[variables('masterLbIPConfigID')]"
                }
              ],
              "idleTimeoutInMinutes": 30,
              "protocol": "All"
            }
          }
        ]
      },
      "sku": {
        "name": "[variables('loadBalancerSku')]"
      },
      "tags": null,
      "type": "Microsoft.Network/loadBalancers"
    },
    {
      "apiVersion": "[variables('apiVersionNetwork')]",
      "dependsOn": [
        "[variables('nsgID')]"
      ],
      "location": "[variables('location')]",
      "name": "[variables('masterInternalLbName')]",
      "properties": {
        "backendAddressPools": [
          {
            "name": "[variables('masterLbBackendPoolName')]"
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "[variables('masterInternalLbIPConfigName')]",
            "properties": {
              "privateIPAddress": "[variables('kubernetesAPIServerIP')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "InternalLBRuleHTTPS",
            "properties": {
              "backendAddressPool": {
                "id": "[concat(variables('masterInternalLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
              },
              "backendPort": 4443,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('masterInternalLbIPConfigID')]"
              },
              "frontendPort": 443,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[concat(variables('masterInternalLbID'),'/probes/tcpHTTPSProbe')]"
              },
              "protocol": "Tcp"
            }
          },
          {
            "name": "LBRuleUDP",
            "properties": {
              "backendAddressPool": {
                "id": "[concat(variables('masterInternalLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
              },
              "backendPort": 1123,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('masterInternalLbIPConfigID')]"
              },
              "frontendPort": 1123,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[concat(variables('masterInternalLbID'),'/probes/tcpHTTPSProbe')]"
              },
              "protocol": "Udp"
            }
          }
        ],
        "probes": [
          {
            "name": "tcpHTTPSProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": 4443,
              "protocol": "Tcp"
            }
          }
        ]
      },
      "sku": {
        "name": "[variables('loadBalancerSku')]"
      },
      "tags": null,
      "type": "Microsoft.Network/loadBalancers"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('masterVMNamePrefix'), 'nic-', copyIndex(variables('masterOffset')))]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('masterAvailabilitySet'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('masterAvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "Standard_DS2_v2"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('masterVMNamePrefix'),'nic-', copyIndex(variables('masterOffset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "computerName": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: /opt/azure/containers/provision_source.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionSource,'\n\n- path: /opt/azure/containers/provision.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionScript,'\n\n- path: /opt/azure/containers/provision_installs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionInstalls,'\n\n- path: /opt/azure/containers/provision_configs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').provisionConfigs,'\n\n\n- path: /usr/local/bin/health-monitor.sh\n  permissions: \"0544\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').healthMonitorScript,'\n- path: /etc/systemd/system/kubelet-monitor.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').kubeletMonitorSystemdService,'\n\n- path: /etc/systemd/system/etcd-monitor.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').etcdMonitorSystemdService,'\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').kubeletSystemdService,'\n\n- path: /etc/systemd/system/docker-monitor.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').dockerMonitorSystemdService,'\n\n\n\n- path: /etc/apt/apt.conf.d/99periodic\n  permissions: \"0644\"\n  owner: root\n  content: |\n    APT::Periodic::Update-Package-Lists \"0\";\n    APT::Periodic::Download-Upgradeable-Packages \"0\";\n    APT::Periodic::AutocleanInterval \"0\";\n    APT::Periodic::Unattended-Upgrade \"0\";\n\n- path: /etc/systemd/system/docker.service.d/exec_start.conf\n  permissions: \"0644\"\n  owner: root\n  content: |\n    [Service]\n    Restart=always\n    ExecStart=\n    ExecStart=/usr/bin/dockerd -H fd:// --storage-driver=overlay2 --bip=',parameters('dockerBridgeCidr'),'\n    ExecStartPost=/sbin/iptables -P FORWARD ACCEPT\n    #EOF\n\n- path: /etc/docker/daemon.json\n  permissions: \"0644\"\n  owner: root\n  content: |\n    {\n        \"live-restore\": true,\n        \"log-driver\": \"json-file\",\n        \"log-opts\": {\n            \"max-size\": \"50m\",\n            \"max-file\": \"5\"\n        }\n    }\n\n\n\n- path: /etc/sysctl.d/11-aks-engine.conf\n  permissions: \"0644\"\n  owner: root\n  content: |\n    net.core.message_burst = 80\n    net.core.message_cost = 40\n    net.core.somaxconn = 16384\n    net.ipv4.neigh.default.gc_thresh1 = 4096\n    net.ipv4.neigh.default.gc_thresh2 = 8192\n    net.ipv4.neigh.default.gc_thresh3 = 16384\n    net.ipv4.tcp_max_syn_backlog = 16384\n    net.ipv4.tcp_retries2 = 8\n    #EOF\n\n- path: /etc/kubernetes/certs/ca.crt\n  permissions: \"0644\"\n  encoding: base64\n  owner: root\n  content: |\n    ',parameters('caCertificate'),'\n\n- path: /etc/kubernetes/certs/client.crt\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',parameters('clientCertificate'),'\n\n- path: /var/lib/kubelet/kubeconfig\n  permissions: \"0644\"\n  owner: root\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n      \n        server: ',concat('https://', variables('masterPrivateIpAddrs')[copyIndex(variables('masterOffset'))], ':443'),'\n      \n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n    #EOF\n\n- path: /etc/kubernetes/manifests/kube-addon-manager.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/5STSW/bTAyG7/oVRL6zrM+HHDq3NEtrFLYFdLkW9Ih2CM+izlAK9O8LjSwvQSKnJ2k45MOXLyWs+ReFyN4paOfZnl2loPRVZkmwQkGVATi0pGDfbCjHqvIut+hwR+FwFWvU433sopDNANozKoDBDZnYswCwrt+ExZp0n1EH9oGluzcY4yq1Hqi58xXlOrCwRpMBPPsoK5IXH/YKJDSUAWjvBNlRSN3yKe0AbHFHCqwOM8s6+Oi3MtPeFj7Goq8JjoSG18ty1X6azWfzE6VsjCm9Yd0pWGxXXspAkZykDHLtMPuo59vPz4/369XT4ksKA7RoGlJwU7QYCsOb1NKQpKf2bsu7mwvC3cPDevW7vPvx9TWBRJ9rT7JjwY5lIASKvgmaDuvoA38ainI8A+i6UXBrj2dL1odOwe3/S07B1pvG0tI3biwbdQ3tDpW2TyhRnhVMyDrKwGrtTHdc5QlqI79BHK16QdyRk2KZVlMtKnLC0uXfSYTdLl7ntxhyw5v8YPpEr8uMCSSJzk/jXvXjPeBg9MW3fOZw/wMk3KG8/oDVrz19h/EP5k65eIV+Sp3w7UNTZv89rp+yvwEAAP//tMpB788EAAA=\n\n- path: /etc/kubernetes/manifests/kube-apiserver.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/5xWbW/bNhD+nl8hdF9Ny7KdN2Ma4LpZUyBNs7hrNwyDQZMnmTPF08iTE/fXD5QsWY5fEiwBgpj3PM+d747H47n6BtYpNKNgFZ0tlZGj4AHlWQbEJSc+OgsCwzMYBctiDoznyoFdgd0cu5yL2ubWjiA7CwLN56CdZwYBKbCjQKAhi5rlmhsozwVmORowtCfschCem1uFVtF6orlz92UIlQdmUAITVpESXJ8FwQId3QM9oV2OArKF9+A9cmXAbuJgx76F/1EZT2EUZMJ2MyUsOkyoKzAL0bnQM6wBgurfLXm0irrRVTfqt1UeCq0fUCuxHgWfknukBwsODG0wArOM+xz/9W5X7N3fGwS3qfNmxrhcgSXlgHEpLTgX/9wcjaW0v7zrBB6mNT6x3KqV0pCCjH0GNiaDZp1h4RgvaBEnXLvaUkhFTGPKMv7MU4gHvQOGORfLIo+jQzanfkAc9fZMOadFHK64DTWmZcZKW1j+7WpM24S8zBRLlIY4BBLtZHMp0biwDeyueaZrPi3Qqh+cFBqWoYT4HiV0Ht+PJxViroxsMtfrlr+VRWgFhpjghx0LsORCwbvCUk3AQjKBJlHpfpw/CgvdfxyaNji3uFISbFyaKwsYPte+mply/sqxXBepMi6+r2/SnUpArIWGzp3KFD1yk4LtTMGulICxEFgY6nyAhBeapoSWp1Bej/rsK2qwZUqmINBI1/nGtZKclEnHtdvvMF8gLjuP4LCwAn4rkHjn5pnASJD16Vaq84ByCqLwl7Fq7Z2vM0ckR5bnjHAJpmq1bQ8CCckEf2OmKzRYOoH3mKqEL3hLWL+NtoR1i1ZdQBcviHI3CsOof1l2SzTqDy6vK6AyzmcAWI6W4k0feRcaqOknfzUTJTgd/aYvon4hsIT1aWITNyopapaSscvNaMBlMrgUnMnraMiGA7hm1/P+kF2J3lUEvfmA965a5NRikTsmNFdZXH1oWZVzBVhWWN1kxZHrPikj8cl1DVA4uDqPkv7FNZv3+3M2lHDBri/lBeP8OoGLXgKDXhS2JAsH1o/gjUtUsjLmFhOllUnb4ym3+Lxu5/XUTS3B26TucJdwZLq0qU1aLfxbgKMFcAm2GqwgWfnOxYcQbxokm3haTb4rAs9kOas+OJZbSNRz/Ad7hAwJ2E1pPcQri1bztoSP/vgQvinAHuV3B7ZitJt8OBzUh+X4YbyaP6/ltHnStnl9qaAR/buyHRI1QOjCEVimcmb97IujzeAOo4sNspp6zD9NYGTsb/AmTtLu1V7ZBtdUo6SpfAGWuUIRuPjr3XR2M/lwezN7nI5n3z99vZ1NbseT23G/N3v4cvdnNOidd7agm8mHt8AarfHNdBb1r2YfJ59n09tx//zisNhJ3I5a//yiRg2uhsfVjuL2Ypu8n3jU6cD2QXtRvarTAm3L4ZcZTvA/Om0VD5tNaoW6yOCz77jNEtheBIEE2yo25iDIPOGB02IUvHB7UMM5XXbdKQnndLiLqRVW3DKt5vVLcESj3KbUPHyJqlUyp15hPnGegqHwMzc8BflJgiFFazYF8rtBO3gLXH4xet2s0ru+HIrlEWeY74dWrm8a01PxtffEs7puL/b2g+Xyi38p1KjnR+t2qmYndXaLd7pwR4UOVXC/eq/S31TGA5U6KlyX7Ei5Tge0U7efbr78evZfAAAA///b9VBnTw4AAA==\n\n- path: /etc/kubernetes/manifests/kube-controller-manager.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4xVwW7jRgy9+ysGORYZS87uFoUAnRY9BOimBgL0UvRAj2iZ9cxQ4FBK3a8vRpYdO7bj+mSIfI+PfBQFHf2BkohjZYbFbEuxqcySm1lAhQYUqpkxEQJWZtuv0DqOKuw9ig0QoUWZ4qkDd0hKu6QYZsZ4WKFPmcIYJZTKTHjbeYg4PnccOo4Y9XaF1KHLJJ0QC+nuu4eUXkZR+1I2coPWCSk58DNjNpz0BfWNZVsZlT6XysRAEWUSZO/2lX8UoMXKBCfzQE448VrnjkPBKRUZKhEV93+vsFTDYr74Zb54OqVb9t4v2ZPbVeZ5/cK6FEwYdcpxHAJkH/58uMH68NeUCtKmnGcteM8OFKdRUCOpXoNP+PBoHqx1nvsmM62prQtUd6od/u0F538njqfJnfBADUo9hg+RPinKyF8vyvnT13Jezsti8XQez5OtYZssxpYi2mxE2nB3TPi5/PIFGyjPYYnaSLG1DkXtmjxeSM2RVDiYO9Hr2C3u7kC3uJug4zh6walj4V7xfGzH0af6p8cVsyYV6HItlEflLUbnESLKPn+NoJmvhUz0Gzvwr8oCLX6HDhzp7jmxByWOdV7Lx1eUgRy+cIO//pNbOUT2fFn+wbQBpPC0GlvyqMV7bJ/rERoUix6dnlCM+xA4krLYVsCh7VCIm/prmfYpHTcWB3JZllUKyL3W38IxLLwmT7E9nYwwq3Xwf10aR2slC3bkaZzAQcfiUCjth2HBOe6j2k5oyCt9x1LoKCNR3p1VlEARFJuxudZZ3QimDfum/laW09r1CS9qOsEGoxL4dDLEoX46vnMD+z7gj5w9XZLTa4Lq7LvCY9iYkAFL0E1lPrRxlSMl/wn4PCoIze/R746n7pzOwfhC0ZrygbilqU9S5BPii7QBweI26kO5i3oDiPW0stOi3qj3YZ0vWEKiO8g3gBajFj/Go9g8j77pzr6iKsX2E8kHEz98Ca56lz8lY+EjXXfTxOsGfspwSPvcrJsU91yb3TfmJvc1hy7duQu/a9N/AQAA//9NT4aahAgAAA==\n\n- path: /etc/kubernetes/manifests/kube-scheduler.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4SSMY/bMAyF9/wKIXMVIzcVAjJ1uuGuBgp0KTowMu0QkUSDon3wvy+UuE56SRpPBsn3+PhB0NNPlEycnBm3qyOlxpmam1VEhQYU3MqYBBGdOQ57tNkfsBkCylzOPfilN2XFuDImwB5DLkpjlFCc8ZxUONg+QMJT3XPsOWHSG+Pcoy/aXoiFdPoWIOf3U4TzBpu4QeuFlDyElTEHzvqO+sFydEZlKBvKRqCEMuewj64oH0Xo0JnoZRPJC2dudeM5VpxzVRSSUPH8exG7cbvZft1sX65d6iGEmgP5yZnX9p21FsyYdJ7xHCMUxr/W/5qtf88TIF0ubWvLgOfUUrerRpAq0P6UIKBWl976i1lbGxAaFIsBve4KgnO5F24pUOp2LYQ8F8fdy7Jt5DBEfOMh6QzqGhaqt5fzl7YxsQhq0IMzFaqv7gz99RhBbKC9nZM/MPl0341LzPRE+QHQYdLqDRJ02Lw2mJR0sj9QlVJ3nV4Qmu8pTMtjOVP49FLuHl+e2mnxYtc/pPB/Ag+d7qG4xfBU/pTHnwAAAP//+iRcGvsDAAA=\n\n\n\n\n\n- path: /etc/kubernetes/addons/aad-default-admin-group-rbac.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4yQPU/zMBSFd/+Kq+7O274toXgEVewd2G/sk3CJY0f+qBC/HjUBJISE2M/Xc0YJztCDr7kgnaPHvQQnYVA8yxNSlhgMpY5tw7U8xyRvXCSGZjzmRuK/y05NKOy4sFFEgScYYnbaoefqi2Y3SdBDinVWRJ47+HxVEo21QwooWILsukBnpItYGNqUVLFZlOxcDBMHHpCa77YpOhg6hVwTTq+SS1a5di+wJRulaaV7/Ghf17Wwe97yUXNrW32wrtfcYq/t/7v2sL3lG9idIuJZFt8v9CpFjzP6K8+PH7/6PsmWJ/4Y/B4AAP//aQPgIJYBAAA=\n\n- path: /etc/kubernetes/addons/audit-policy.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/5ySy07rQAyG93kKK8uj01bsUF6ADSAUBBvEwp2Y1GoyHsae0L49yqWlrQCJ7Oby+/fnCwZ+pqgsvgBMFdtye61LllV3lW3ZVwU8SMNun0nL9mhYkxYZwAJKek+kVpIj7qjKYmoOXw111BRfCg3ilTIAgEgqKbpR2WvrKCkUkOfD/VQAL3mQSvPXU887MqzQcKbZqpE6/w/jWQ0tXfjfix9Bk1IcwnSvRm2xTWtahCi7/RAA0FFcD4IPNLeZHv9GRL4Kwt60R1KKHTv6jeemNzuFwmQb8sYOjaoJwYsvpyRP5e0RZIWB/x3O3Tjxb4Y1owon/o3rFoMeCLAlDTh9D40bec9Lm59RyUUynW13vNPOyPed0B937Hztx+jL1f8MAAD//62kjQpEAwAA\n\n- path: /etc/kubernetes/addons/azure-cloud-provider.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/9SVT4/aPBDG7/4UFpdcXvOqtyq3dg+99J9A6mW1qib2EFwSO/KMI7GfvrLNLoWNEGgL2t4ihxk/z2+eDEopAYP9gYGsd7UMDeg5RF77YB+BrXfzzXuaW///+E5srDO1vOsiMYaF71D0yGCAoRZSdtBgR+lJyk1sMDhkzKW6VCjCMFqNtZxxiDgTUjrosZa0Jca+hscYUOnOR6OG4EdrMIgQO6RaKAmD/RR8HKiW97PZg5AyIPkYNOYTHNEx5fMRQ5N1KKkDAmN+HID1Oj/FwaTD11n/aJ2xrr0FAd/hAlep7RODE2KFlC/HdM41FJtfqDmzLh2WRewHrX10/Nxksrq8pAGSueRdlbteSfkA74SHIbUlRsdq9F3sUTXWFT2XD2MyalV1HLWKUAdkqvZZS3fI+6pFrv6rSuaqhysE7OoE9lGbCtF58btE5NmhO2Hz+sG7ynetSoxUi8wX7Lld+I4XXYv8ryy0Y+M3WW9Hl95o2RH7AC3usTfI8MR+WV7edUA08ZUbXEHskhJwznOGsBvFrq1OlfPUcn44HEtqV63yb/6YzuUTza6THQz1UUmBYyxtxAABemQMtF8eX8BBi0Y8C4YCl7cDJvvgDATz8/NiKaTUoNfWtb03WMsFgvnmuu1fBdoXOWoI2NvYvwT7dth8LxJvjoZ2M3nLbM7OzYTzk7wmuGShK1v+/K4OJF90CIQ28WtWcuD6dwAAAP//NH/WfLULAAA=\n\n- path: /etc/kubernetes/addons/azure-cni-networkmonitor.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/5RUTW/jNhC9+1cMcpfl3aLFgrfFbooWaBwjbnunqbFNmOQow6Fq9dcXlGxHku00yyNn3nvzrWv7N3K0FBTouo5l82l2sKFS8F2jp7BGmXkUXWnRagYQtEcF+t/EWJhgi4DyD/HBU7BCfHKItTao4JA2WMQ2CvoZgNMbdDFzQFZ6I/Gx/6sqCl4HvUOeZygHFIxzS6WnChW8oKFgrMNZrNFkoogOjRD3pF6L2f8xUAE4fInFtVaqKy24FtaCu7b3lbbOEuScDbu/OocZgKCvnRY8CQzqkJ8bad1T63ILgUSLpTBwNy5FQS50EopGu6u0q64DEaWoqVLwIJzwoYOfC5BfzZbYSvvN6RiXXXv6mheBKiwMW7FGu5O3kEMeR1LAAVsF306OX3Mf4nNw7SVSqjOGWMHj0UaJY2Anw+Rw2jWd07tF8pou8QA02iUcZZcfbrdoRMGS1maPVXJ4EX0jeujDuYV6PKJJ8oOgiVRObD0asa7LoyQpKnA2pOPJbiiItgF50OhisjWXscjPer1DBd7w3FvDFGkrc0O+vDCdVsyGXTneNtUs5ov5lynZKjm3ImdNq+D37ZJkxRgxyMAvokndzFAQPIoamLqBaqzDHVYKclMGRsZIiQ3GMYLxNWGUyS+AqZOCnxZ+8u3RE7cKPv/8ZEcmZ729w/J58Q7NLyMeDM2Y4lz/357Xfy6/Pj1OeLoB/JXJT4UBthZd9YLba0u+YW+Xs/l0w6EDr7TsVbev8zxOeT8Hrg255PGJUhinfY4YN6I3DmPByWHBWNNIx2dgr1A2mktO4QaJo927qLH9jBJ06FG4vYulWkoTbLmxZ9U9RVn2IzoanT7NwcG5DixDO96BXH0vxv5Yf7fcrWY7+3DR/keFUyg/LHNdoHfYr2t1S+C/AAAA//+9iyeOjQcAAA==\n\n- path: /etc/kubernetes/addons/azure-network-policy.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/7xWS5PbNgy++1dw9pKT5LiXZnjbbpL20N101m3vMIWVWZMES4KKnV/foR5ePWz3MTvVySLwfQA+gJDB698xRE1OimazOmhXSbHF0GiF90pRcryyyFABg1wJ4cCiFPAtBSyct/1J9KBQikPaYRFPkTEbDOzQxAwSAqqKnAUHNYYyuwWHjLHUtLZUoRTPqMgpbXBVFMVqnFXYgSoh8Z6C/gasyZWHDy2y2eyQYUj6waTIGJ7J4P+ccUgGW1QhwOsfAyXfkxTi7q79ETBSCgr782zxVMXzi6MKR29Dgt1Rg2E3AtbI599Gx9eXr8BqfzkNh/yVwkG7uhfvWla9oyejlf5P8d+gfz9oV2lX32pjset93r6dMe3+QMV9Ry/eiMy4nKurqQQy+IwvmXA5q5eYhv7dUG+hM3gf1+cr/BHQktvi29xe7+eV/hs9ParME9GgYgodp83D8vMoiBCHD7FYhEq+AsYtB2CsT50rn3yOQMZoV//WOqyEYLTeAGPPPyo7P2YS6kqwtjLniFulR95R7bFKBkMJxu9hVrEKmrUCU3iqpHj37gxTXZ8LSExRgVloVbVtisgd9I5Dwm5jDKrlxwdNQfPpwUCMT20Puz4VeW8UQ/jem8lgmBZQiAOepHjoHe9z8+IXZ07nTMlnDAUpPh115GEXZf7tpG+tdpMaKEphtEvH3q7IMWiHYaRfcfG6dI+2UKMUVoXSahUo0guXiuz6TPS6vdZnAtlsyk35/YgnokqtSuQYjyxHplbCRhussZIiizwyLrbgcPxnwsizUyGUT1Js3tvZsUVL4STFd+8f9cRktNVXWW7QTHnQNVOKQdGfvmx/fbp//DTjacAk/BzIzgML8aLRVP06mj+zvwNLhxb8C/BethNa5gHJEzlybcgki495UU7KHjI+MuwMxsKQOkwi2AzpuNchuXXvWM4cBx5D9VV4A2E9tQ8oH4hJkYlXschqPffaU+Snbgon89PVOv5+LlLL0JZ5FNBfy7LbbB91aG/cafUPlLvBf0PELtBnbXD1d/rcCHBJqovscfL9fJrtgr8CAAD//9o2apKFCgAA\n\n- path: /etc/kubernetes/addons/blobfuse-flexvolume.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/6SUQWvjTAyG7/4VQ++O08MHZW4f2x4K2xLosndlLDtDNKPZkSYk/35xHbd20pbC6ijpfaxXmgSS/41ZPEdrICVpDrfV3sfWmnvAwPEFtQqo0IKCrYyJENCaLfG2K4J1R3g8MNU+igIR5nOLJHBozb5ssZaTKIbKGIItkgwUY/Z3UkNK76gxW7aYIyrKynPjqIhirgXzwQ+4G80FbypJ6AaKIKFTziMxgLrdz9knLoetjFEMiUDxrJj5GoIW4g/kY3xvyLEXYmQF9Rxn3EkCRVkcEObVktm+rl5Q68TtgjhZHyJlz9nr6QeByPPrrOOq6+kDLnv1Dmgaput89HqaOeQW/7/KGpPxT/EZ2/uSfexf3A7bQj72j33kt/TDEV0ZrM2VI/PlfJlfmIMsy/V4qIdjyiiyXMzUsceTNdBj1MRMF2VjOGGG4e7mmfUxXtUPQAWvsAO4I1AH+VxxHBV8xPzWW3/nfY/hA/RoTXB5FbzLLNzpynFo9nfSnGUlYHOJKgHt7Wq9uluSNoVow+TdyZrH7pl1k1EwavV+EuGS3dLXcCcUvfDqUrHmv3VYJAMGzidrbtfrJz+rkA/+HwCjoycucQ6Z9nhgSlR6H2WGCkPzBnRnTYPqmve334y0s6S5xkEm7j9BHSA3xP2kGlFXl71A7FhG/QyaPuR9YekLyHf8zX8w9pN/GRZryMdyrP4GAAD//+ILb5exBQAA\n\n- path: /etc/kubernetes/addons/cluster-autoscaler.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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\n\n- path: /etc/kubernetes/addons/container-monitoring.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/+w8a3PiOLbf8ytUdG3tbt8YCJnMzlAzW5UOTDezCaGBJN2ZTFHCPhgFWfJIMgl97/3vW5Jt/MSQfiX9oD900OO8dV4Wxj65BCEJZ220PNhbEOa00QhsAWrPA4UdrHB7DyGGPWgj7knsAlOWDFeE49LHNrTRIpiCJVdSgbeHEMVToFJvRWZGMFAg64Q3bBpIBcKSIJZEb6wpEUDNrMSOw5mHGXZB1LPbPO5AGw3B5swmFPbUyoc2OvfxXwHsxWRejXqdNqq9vb2kfe/3Rd97rd5e9e7OT5rNM+/i6HTs/nB2e6Gub90fzjoXzf7Ls/vr2z7RyP/TfdtGtfNL/8314ujEefnz4dX4Rff1mxcv8aLXml70xLX3kzi/7B5dNv3rizFl8Ntv3vS2P37t0dXwTX8+Hv9O7bET2C9l87Kp7u3x5WLavH5zzZze+dXwzZTN30277uHrw+vD0xZv9a9+H1x0uz8PXv/6q6agc3523Ou3UW16+MKfsr5/3Zo37dXRHNjl6np0dDttNX+t7VmWtbdBbUagx7bNA1alvkfVmyY/pPckBDjkFDIMiSm26zhQcy7IO6wIZ/XFTwbW8qDKKAVgB8Tn4EEEFAx8C2GfvBQ88GUb/VGr/WkgCZA8EDaYMZ87sraParAEpsxfjDuQ/NGQCqfGGx4oQez0vA928s0X/H5lvsYaNEsjhmREwRLE1GCnRCo974L57w4re27W5CjHvh9Sea+AaTWYbzhQXNqYEuaWsSbAp8TGEkL6HfApX3kxm0Z9nClMfe7EkECUk1hG0juPs7qtIRAGok6YJO5cyTJK5oCpmmtJFkUQsW4LwAr0X35KCIyzYQToYnhq1q81UALnz3LzfUGYQ5j7Maw4slDBKUwjqJ/BoGUwvQVbRTZd6k40xIIb2ehINP1DmGl4xcO++eTGBlAhvrQGOJsR9wz7eX8Yi1ZTpC1o1kb/Zxlyn6HfaABMOcg2m9GMUEAzLtD52Qh1uL0AgSwUiRXZ3PM50xaN/qGBHQ96/zRw0LOZgaO33mHhIJ8GLmHh3C+hQf07/IZ0pIrXRUM+FwrVnv1vt3/5x99fdY9Px6/Ozjvd08mwOzjtnRyPuuPJqDu87J101/8Pzofjv//5/7UIhLYO1Kybf9GQPQ/YYiLJO5hQ4hGFfvAighoxRRHx/1lbA/K5gwjTzomL1Wb6Nfc+d3IrkcKuVmNyTONTWtcoBtzp5TaIgE0IUyCWmKIfY8opdycUlkCRA9PAjfkJpOLeJDqPE/wuEDAR4Gr3hABLFch9yQM1t4EpgWkg9+9Aquy3QLbCRXoDlgTvMy7UHALBfTAroj/NIjwTxMZmxX4Cx3xPvoaoW/sLLgBHw/tr8NGAPrx4P1gYsPs2ZthZr50JzGyIv91iHzO9fR8H0mzF5luMJuQimVxzsz8V+B2hIQYXhIfZKiWAPNnyjqh3IChmjpnZbhthzKo2ivSaLebQTS99iCFU0djXYbGaRB05H2a4GugHWG4VvWGoqiY4vcZQmgzWh2HQHYH6CHTZ2FkSyQXyQcwsdEWYw+8kYtUyvSMs3qj35SSKfVIvX/GRJMhNrEIm2iMLpdKOaqmaDYXVWyxhpDd1Cps+DSuvBsc7sDD38e6kv1ov/gCSf5kRqsOh53j1woF6/jwb6MzSyXq65Tned3/++fx5SqOEzXis0FAtycHPqsJzvEhxUSJjUiJ9dJHOpdBMcE8f+4J3SBlG+sCX20S84rtJfGaTiMWr+MTmlGqXY/vBhc6++5jxEy5A7nvgcbG64mJBmDsC9WKlQO77ywsJjvn7IfYVBiuk6wyKsOsKcE0SH5lC1nqS6FZuN+HcxACbTANCnTWEHN5fPF3b7ZiR5pDxQE24V+QynYiwwJuouS5XJDqKE/FgNtPGbZLvbN4dz8XMQHbYx2qO/jYaH4+7k05vOLka/a0RUTGJ8m35vB4uzu78K4AgTvJbzbK5WUDpBNtG5o7g/oRTB6QKyYw2zGgg50lMaDXX0Q2UWEXgD5qZwTtMFDqKF3r4fpIeX9cbRg87ayVMDJ+8PsJU95vQSFT8f6hOWp9cJ3Hj65vQSqYseZLHxSSoGQWZbOGr185JPPIxVXT4SU/PmolsNr+7ph5B8Lq2NGG8mGM+DfvPhG9N5Ndj+HHxl+4CPn++qSZEBeUkSf9jKsdzvMkXqZRorabf51KZyYlHWKBAosPmLicn15V50gcI+2SSp/dLVNvms7RFFU/nuNhfuAre4+REakq1XUfEZZgm+XDxyJSqqURLFUoq19GO4SaqoDMaqlDQQ/WzST1l2ilRTrluSqUeu6telFydhd2LJyr6OAWMeixfqPyrrlVIK3xW+ujXRtJPebHvy8b66ksHg8fZKHdpKU3U+kmu4cxKHmArAqJtepqfjvjdL+BIH2xNsAQKtuIiJN4o6TTFTQU/OY4UeD7FCiJAKekYHhjjyjTm1oARMrDWgj6oHzTrzfrBetoxD8kHgi+JAyJZZ55EW8k6ac/Bw9YyXCDbCC3jSZphpZKZgoJiCemPLwgXRK1OKJayb0QcytHSyy1bEEVsTKPVMnOhoV+8y6AJiWqiFHFW2bWH8EM87EIbebaoe8QWXPKZqtvca5g+tscZUVw0CtViwya+4E47/O+g2TxqNddxcw13EFA64JTYqzbqzfpcDQTILP7kDkxqECHjDHJjCNl+0EYHucGw6dtG/zpqnpHMnIC/ApCbwBw1vQ2QWjlIwJZZELE8++ed7qQ3yIFZYhrAb4J7ebwIzQhQJ7pUUjo3wGreNg/TAlmfc6ly0GPMxyejybA7Or8YnnQn/eOzbhkNbYQX0gLmEgbWHRcLOee+FTuEH5uHh+DgZin8k/P+eHh+etodTsZvBxug19Y+q1YKpDcad0fjDXsTLxR/nqEL38EKkJoTie6ImiM1BxRIEAhLSVwGDvIkQTYlwBQijnnEExt16M3QP8gMwT2RSv6zlKiLUXc4OR6Nei/73c6k1+n2x73x28nJaa/bH096nQ3kpkmlZAkMpBwIPoWsKuE+Odrxx+aeh5lT1LmFGlPCGlMs5yVzll22gfuqEeP3Nf56bjNhRBFMO0DxaqTdtyPbybPS8OODINwpn/W5yJ8YK3EqAy6UPiCt1lGOOl9wxW1O22h8krfZku0/bNx+0Ulvl2AHxj9ypuBeZQnzBVkSCi44baTtKTW55DTw4Ey7yQI3nh4NT1pDn7GZzBETWoqesgTnKjer87FzRlcFnHnYSywaImAGRymGMA5ZktuLLWAodzfTmJ8s2U6mjRBZ4srLmV5PU+5aOml8X+Y9piKUu+GxWh+C6aFcWYfviw2U3UhSpc26NfHTupWcFcVYhFi8ll6EWL3mQQyE2XBDglKEueUyiyetJadJ+vyxUDawc1/NJXbuH8Apns2051slZ13nT8eF0TArIAKcTiAIc0f2HJyAEub2XMbXw917sAOdVGZ9h4Y5ivLaMQiv4FpMWjjKZL7Jx+TA3XtfgJTZfDUBsIBVO5fB87x+9If7ILDGgXqsZNqErRIEhkbCgrzs16h19ViJrs/VgzEuiVABppbmi671qTjVQLOSsFKoal0Tx9OhF2YzsFUb1fo80lwqidh9b6je99g6EDADUUQehpuSlLssiOgxczKywSw8KwUI5UGiEkYUeAqg1m7Q0tv12K4Q9Qku7LE2B6Gt5KWXF8griT3bAVaGuI0oMmGnEklJQNsM9fAhUCvo3RxFtqorcSIb68Cifw0HsjDDsX7lTmunoGHHt91zXjVnnPidZ8U1dEng4b72GZjmwk6BudIAsjODG8JPAXlgapaREliBGwWa8IddQ051XAmLmm3dn/X1zOo+1q4NrEftFcX9jfjHNWHNvrUfJGS/hF25VbLbOkT5Vk05HvRYvaR0N+h7f+d7f+cJ9XeSi/rfVoPnfZsOT6x3smH7v3bGHgcgwiwhLWX7qdldGyxPownyFVXt1VjSj7q2w/qaOgDoa+7Mfm9vZD7f2xtPpL3x7TQnvrRKvDIiVBbiFTu/1TL/fa5u5Mi8Mz+tf+/iPdqfLuDXQ5+0iN+1v/GeFz7WTJRw9rCyfgv0Usl9PSV/htMPLvvvCLMeofRvNTfW7D82d6zZn0blvOVmxKvz0XgTbeWdhcrWQqa34INd10bez0bQD+hq7I57Q19jx1rxpH0zENwV2OtghW/CY3az5dFulIFEv+y1Nq7etVQ5ad8ssUDPhoAd9D/oShAFCNs2SIk4C1sX5pfFXJL456D5lLKUMuNuwfjbhEqdmchKYkDZN2F0vPlMxVqE9PMVt1kun3RZaHtOWe1XVhCetG+4r9ZijMzgRtqC+Ere2J5zk6GrnodddUtnQzV58NMTKxi31YS7VoSV9eCm2syKf+//DVZkD/I6VRVM6A+3oSl1u1vA7ubrn2LJ8emKtc9VzGTej5Z/91ixigl/mGHeXmAlr8yLS4xHvVVfft08fsZXSxWzGnSqQ2+VNr79QptcYeGCCtvnSSNcC/FZmA1ECUGc5qN//3pQP/h5Pzv4ix5Dd2CMkbAAkOIokICWB1NQ+CBXXpLkLYbJO/fChdGL48xbR+IX/3XA+HXC2UblhW8WrG96JeGT0KEbvjivgsZlykx1gcV1IdqPCXdiLkJafRoIbfVpAYRMGBG+MsPmFUN7e/8NAAD//6MKDrJGVgAA\n\n- path: /etc/kubernetes/addons/coredns.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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\n\n- path: /etc/kubernetes/addons/secrets-store-csi-driver.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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\n\n- path: /etc/kubernetes/addons/ip-masq-agent.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xVwW4jNwy9z1cQuWucZLHGVkAPRTaHAEkabIDeGQ3tCJbEsUi5cdGPLzQee2eym3bT0+pkjPgeHx8pE3v/B2XxnCxg38tid9FsfOosfEaKnB5Jm0iKHSraBiBhJAv4V8lkfG8iytbgmpKOd9KjIwub8kRG9qIUG4CATxSkwgEcx54TJX2LBQZwTqQkreeFC0WUshHKO1+5zzQXOhsises4RUy4ptzOYZE7svCFHCfnAw3h6ilbSNxRIz25KkgokFPOB3ER1T3fTtQCbD6Jwb5/W+2MFkAp9gGVRsKJdfWEGfcPsb/iH8pOiRXVc5pQHX3CoiwOwzeOdENDhdT03M1sPJpRT589Z6/7q4Ai90O3D300VYBx2at3GMboZxa9J/2T88ZCJRy/19jHmbXfNpbFQvCpvBxt5EB5XpWBDe0tXI1Jf6vtlt9T2J8oua8YzhauX7yozIGD5MyBXg8HVqu+R7Itp9oAdhjKfODqodWKnFq450f3TF0JdEr6lejsIOd7qOsXckXfCXqVynFS9InyxKp/e5qH4yOuyUJ0uY3eZRZeaes4Llhk8dWhxQxtd5ftx/Z8TvJQQnjg4N3ews3qnvUhk0xTYV5PZrPKM4YSPoWqbbf8dYVB6HQv5MowdJyUXnQK7LPf+UBr6mYDBrDjUCLdcUn6KtObRhjHaeXX5gCdYABi5XlAfbawIHWLQ+QpJJNwyY5mmTJtC8k8O4Dri4WP53FOT5Hzvn6/85OL4KN/F/5yQnCoYoL+P5Ufvt9hPxfxX0SNMaaZ7o7T2rg6Ev7Y2jAno3/C7XGdpGQa/1iOpcwfB/xtBq7E6Q5lWyhjR1c3n79MHubpx8XyU7v80F5c/tJeLBcfLsedI9tbnza37DCMM96MM7dP7iYp5V29WZ5L808AAAD//yGR396vBwAA\n\n- path: /etc/kubernetes/addons/kube-proxy.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xWTW/jNhC9+1cQAYo9UbIXLRAQ6KHIBsWiTRpssL2PqbFNmF9LDl0bbf97QUq2JctWUvRSHefjzbyZR1Lg1e8YonJWsN1itlW2EezB2ZVaP4GfNUAgZozJYqkOYLRgf80YY6yfuU1L9MHtD1UXuL2PlXL1bgHab2BRElrsX9ISX3JoWyQFIOVsCZBaoaUHZy3KbBTFygp6iytYvYNQa7Wss1Ej1Wdnh5EiYXj4/OmLYHeLefXx+3k1r+b14uNdCTCuQcHulCdYaoytcYVAKeDPQBiPVf/8e2aQ4DgBCwZborww5aei2RM9yKM7HiKhmTGmYYm6w4OmcdaAhTWGKocFi4RlSG1HXzILqTTOjpTPER0pHjHsVK5zRyFh27p0xjuLlvrNFQ8pDIJZ13SQ95GD94Mwzvmsv0fwPtYnGXwCNM6+Ig0G8f9nNV7W7S1FjzJziahRkgstLwMkN7/2iN4qNN3rRbfJN0D4SgEI14cWmA4+j8lprez6awko9tC3HHswsP9qYQdKZ+0K9sP8uxljhMbrU1R/VfnTAxbT3Y6mO00crHVUjm8fv9sqJHJRgh4Joymqikjcu2aw9PxFucEm5axyc1zkyqBISdBt6ocPJe24wvz5oFxQdHjQEONzUUG7aJ458WP+cTtOYxgS4GyLh3YCPDiNl6qGTO7UrfM53wXBHr+lEyxjO9AJR9xwtUJJgj27147lqegZ6O5xryLFa1mPe5SJ/mXSqFTh99AN4qd8gONvVh+ucSqgJ5VbAmUx9EYlnTFgm/Py+TVNcca7y/LHwe3dhtW9p+WUogysUTAjQ2WUDC66FVXSmdrFWJ830oMRu0W1uK8WH4cYL0nrF6eVPAj2efXs6CVgREunqCs3RfsFjC4FiT1pZ+O3hJEGNsakT4It5nNzVjHKVGToLOGe+uE+qJ3SuMZGsCyPs2acTgafXLJ9fM5MtrwAbQSrkWQdo64lhtNizixi1Lx4+MZFGrQNTd7xRcUx9nm0I3Akya+63wX+xqt9uYuR611FQrL1vn3WK+3kdgR9fPQHziFGbtK4fGBiPW4ts9ed+7+MYEL6jMW0bFOuu2/8iPBWP291lZXxjPSHC9uBvc3une0cWNroa7dlkmKo4wYC1hKK4NRKSeirYkKPk8jvkMkNkUzC3pD2hLAn4W7q7KbKJuGuSu624Hiniyfw4m1Z3LzorsomP3uvgz8hNvptc1EwrWzaz/4JAAD//3ka7lw8DAAA\n\n- path: /etc/kubernetes/addons/metrics-server.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/9RWXa/bNgx9968Q8i7nFi2wwsAeujtguEB7YdwUfVckxtWiL5B01uzXD/5K4sQxmq3Bbv0SWRbJc3hIMSrZL4BkYyjE7k22tcEUYgW4sxo+aB3rwJkHVkaxKjIhgvJQCA+MVpMkwB1gv01JaSjEtl6DpD0x+EwIp9bgqLEU7RcMwEC5jUvtamLA1odtDBeMNSzak8qYGLwKqgLMx2Y+GijEC+gYtHWQSSmzUxK4VjpXNX+NaP9WbGPIt+9bywO9xy7yS3Qwwa2DXlxQvDsTrB1QkUmhkv0DY53aYFIsGk8IFGvU0O+laKhdhGjgZLUkVty/D5I0rzvAdW9aAbe/zlK3+Eux/joRFr4xhCapNAHAQHJx7yHwd7r/TzL9ZoOxoXpVakUHL7BpIgyJm2GVCXFZe/McqF7/CZrbiphsy1ub8RYJ1sBq0GFegHF02fiTCMr8z9fCv5RnpMuhAaRK9oQfBLa6NR+YvhqtvqtnxiCKvvxa5Qw4qBTHn7SFzjjcXZbzifnDRuUNWbyUpwu8+DSKvLhBR0qgGxwEDjRH7GvgPUmV0gSlFJEPgwm5EO/evW1NEkaOOrpCfH4s2x1WWAGXh1PnGVUp0XEE/H6YMj/uT8hVFneq8ulk+mYqfjzBNYeMwSenGHrTk0w0z5VsNI8bBZgnP+Bs16M2eb4eIKGNaHn/6BTR80kryiF7Gm1zW7reQMfAygbAAyo5R0AI61XVfNWYe6sxUtxwrqNfRqLlMfPLs0tt95C/zX8Zeylr58rorN4X4mnzHLlEIGivgQGc9yqYY76kWF6BJYWUTXQHLG0g0DWCZEeTBxLCBhDBSGUMApHkfQL69SkwYFDuqRykjAZWozq5LMtIhXA21N8mesciVJYYZybEh/Lp+mXVH8170seb9+6z4NglnZtstrKvdnrVDZEL/Lvjjd0lQ4hBtdXWps8fV18A7WZfiAb94Kjsq/uTDdbXvhBvHh6Ozoav3fY/AQAA//+trpg4SQ0AAA==\n\n- path: /etc/kubernetes/addons/pod-security-policy.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/9RVTU8jORC996+w2APSSgmLVqxWfcsGWCHxEWU0XNAcKu1K8MTt8pTthMyvH9lxN+kQUAThMEeXq55fva5XDVbdIztFphSWtKpWJ4vTCXo4LebKyFKMSH7BKrDyq1G6L2r0IMFDWQhhoMZSWFYLpXGGshACjCEPXpFxMUMIh1VFte27DNMHbR+hPw8TZIMeXV/RCWhNS5QjpqnSeAs1ulIc/XlUCKFhgjpjgZRkajAwQ95CqEliKcZYkamUxsJZrGLRM7lSeA4YKcbHRk38wlWgE+FuAsohWJgorbzC9H4vM1qQDnU39EjO36JfEs9blBgbEfucWCtTir9SGzU8leKfs7O/z3La1WjYLbs6b88czMB9dchrCTjo2GcMDsyqiPpeKxOeXrsN1mqs0XjQ/zMF615JnLp0vfO21+sVB5kURudZVf7QkyKpmiOfSJxC0H49KtYC18TPaJHsPmAcjFc1dtD2opYLNtBK8W5qO8FeUjugO6ag3dv2aDIYfwTFKM+Z7LZJ4qgPrq+7NonBisxUzW7A5jPW1q/OFeejZfqOeTLi2WHF6PNB0tIsgeVgdNWkx1l0Ho2/T88MNah624gN39Zim4HksbajXSa7Cc4nD9ySGRP5D5qthVvHwMwacdr1cJqPWytihzffD8YI8s7oVezoUml0K+exbqTYtjpPoOpD8I/E6mcag/783zRSi8b4Qx2cRx6Txl0/B2fLzg/inRMb23Zl0RNgVdZWPBzjk0cTmbrjb6k3R4ErTHeWZGOwtLAUrpMWyBNXJmEejoPDTuV6BxTriWxZf4oqnWX426iywfpjqvynjFRmtkOcvN0OIxBpHOM01jUSvUG0EOLl13vlm7kwiQsrqb8uSuhtevZVfAaNVxXkv94eLD5b2IP48bDCblD6TGHfAjQk0e0J9MfF3WXxKwAA//+Y7F5+PQsAAA==\n\n\n\n- path: /etc/default/kubelet\n  permissions: \"0644\"\n  owner: root\n  content: |\n    KUBELET_CONFIG=--address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available<750Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates=RotateKubeletServerCertificate=true --healthz-port=10248 --image-gc-high-threshold=85 --image-gc-low-threshold=80 --image-pull-progress-deadline=30m --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=30 --network-plugin=cni --node-status-update-frequency=10s --non-masquerade-cidr=0.0.0.0/0 --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:1.4.0 --pod-manifest-path=/etc/kubernetes/manifests --pod-max-pids=-1 --protect-kernel-defaults=true --read-only-port=0 --register-with-taints=node-role.kubernetes.io/master=true:NoSchedule --resolv-conf=/run/systemd/resolve/resolv.conf --rotate-certificates=true --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key --v=2 --volume-plugin-dir=/etc/kubernetes/volumeplugins \n    KUBELET_NODE_LABELS=kubernetes.azure.com/role=master,node.kubernetes.io/exclude-from-external-load-balancers=true,node.kubernetes.io/exclude-disruption=true,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n    #EOF\n\n- path: /opt/azure/containers/kubelet.sh\n  permissions: \"0755\"\n  owner: root\n  content: |\n    #!/bin/bash\n    set -e\n    MOUNT_DIR=/var/lib/kubelet\n    mkdir -p $MOUNT_DIR /var/lib/cni\n    if ! [[ $(findmnt -rno SOURCE,TARGET ${MOUNT_DIR}) ]]; then\n      mount --bind $MOUNT_DIR $MOUNT_DIR\n    fi\n    mount --make-shared $MOUNT_DIR\n    iptables -t nat -A PREROUTING -p tcp --dport 4443 -j REDIRECT --to-port 443\n\n    #EOF\n- path: /etc/systemd/system/etcd.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles').etcdSystemdService,'\n\n- path: /opt/azure/containers/setup-etcd.sh\n  permissions: \"0744\"\n  owner: root\n  content: |\n    #!/bin/bash\n    set -x\n    if [[ ! -s /etc/environment ]]; then\n        echo \"\" >> /etc/environment\n    fi\n    sudo sed -i \"1iETCDCTL_ENDPOINTS=https://127.0.0.1:2379\" /etc/environment\n    sudo sed -i \"1iETCDCTL_CA_FILE=',variables('etcdCaFilepath'),'\" /etc/environment\n    sudo sed -i \"1iETCDCTL_KEY_FILE=',variables('etcdClientKeyFilepath'),'\" /etc/environment\n    sudo sed -i \"1iETCDCTL_CERT_FILE=',variables('etcdClientCertFilepath'),'\" /etc/environment\n    sudo sed -i \"/^DAEMON_ARGS=/d\" /etc/default/etcd\n    /bin/echo DAEMON_ARGS=--name \"',variables('masterVMNames')[copyIndex(variables('masterOffset'))],'\" --peer-client-cert-auth --peer-trusted-ca-file=',variables('etcdCaFilepath'),' --peer-cert-file=',variables('etcdPeerCertFilepath')[copyIndex(variables('masterOffset'))],' --peer-key-file=',variables('etcdPeerKeyFilepath')[copyIndex(variables('masterOffset'))],' --initial-advertise-peer-urls \"',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\" --listen-peer-urls \"',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\" --client-cert-auth --trusted-ca-file=',variables('etcdCaFilepath'),' --cert-file=',variables('etcdServerCertFilepath'),' --key-file=',variables('etcdServerKeyFilepath'),' --advertise-client-urls \"',variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))],'\" --listen-client-urls \"',concat(variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))], ',https://127.0.0.1:', variables('masterEtcdClientPort')),'\" --initial-cluster-token \"k8s-etcd-cluster\" --initial-cluster ',variables('masterEtcdClusterStates')[div(variables('masterCount'), 2)],' --data-dir \"/var/lib/etcddisk\" --initial-cluster-state \"new\" --listen-metrics-urls \"',variables('masterEtcdMetricURLs')[copyIndex(variables('masterOffset'))],'\" --quota-backend-bytes=2147483648 | tee -a /etc/default/etcd\n  \n\n    #EOF\n\ndisk_setup:\n  /dev/disk/azure/scsi1/lun0:\n    table_type: gpt\n    layout: true\n    overwrite: false\nfs_setup:\n  - label: etcd_disk\n    filesystem: ext4\n    device: /dev/disk/azure/scsi1/lun0\n    extra_opts:\n      - -E\n      - lazy_itable_init=1,lazy_journal_init=1\n  - label: ephemeral0\n    filesystem: ext4\n    device: ephemeral0.1\n    replace_fs: ntfs\nmounts:\n  - - LABEL=etcd_disk\n    - /var/lib/etcddisk\nruncmd:\n- set -x\n- source /opt/azure/containers/provision_source.sh\n- aptmarkWALinuxAgent hold\n'))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "dataDisks": [
            {
              "createOption": "Empty",
              "diskSizeGB": 512,
              "lun": 0,
              "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')),'-etcddisk')]"
            }
          ],
          "imageReference": {
            "offer": "[parameters('osImageOffer')]",
            "publisher": "[parameters('osImagePublisher')]",
            "sku": "[parameters('osImageSku')]",
            "version": "[parameters('osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        }
      },
      "tags": {
        "aksEngineVersion": "[parameters('aksEngineVersion')]",
        "clusterName": "aks-engine-workshop-cluster-6033eda0",
        "creationSource": "[concat(parameters('generatorCode'), '-', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
        "logAnalyticsWorkspaceResourceId": "/subscriptions/6bdcc705-8db6-4029-953a-e749070e6db6/resourcegroups/monitoring-workshop-rg/providers/microsoft.operationalinsights/workspaces/aks-engine-workshop-log-space",
        "orchestrator": "[variables('orchestratorNameVersionTag')]",
        "poolName": "master",
        "resourceNameSuffix": "[parameters('nameSuffix')]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionAuthorizationSystem')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]"
      ],
      "name": "[guid(concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')), 'vmidentity'))]",
      "properties": {
        "principalId": "[reference(concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset'))), '2017-03-30', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal",
        "roleDefinitionId": "[variables('contributorRoleDefinitionId')]"
      },
      "type": "Microsoft.Authorization/roleAssignments"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')),'/cse', '-master-', copyIndex(variables('masterOffset')))]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "commandToExecute": "[concat('echo $(date),$(hostname); for i in $(seq 1 1200); do grep -Fq \"EOF\" /opt/azure/containers/provision.sh && break; if [ $i -eq 1200 ]; then exit 100; else sleep 1; fi; done; ', variables('provisionScriptParametersCommon'),' USER_ASSIGNED_IDENTITY_ID=',' ',variables('provisionScriptParametersMaster'), ' IS_VHD=true /usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/provision.sh >> /var/log/azure/cluster-provision.log 2>&1\"')]"
        },
        "publisher": "Microsoft.Azure.Extensions",
        "settings": {},
        "type": "CustomScript",
        "typeHandlerVersion": "2.0"
      },
      "tags": {},
      "type": "Microsoft.Compute/virtualMachines/extensions"
    },
    {
      "apiVersion": "[variables('apiVersionCompute')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')), '/computeAksLinuxBilling')]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "publisher": "Microsoft.AKS",
        "settings": {},
        "type": "Compute.AKS-Engine.Linux.Billing",
        "typeHandlerVersion": "1.0"
      },
      "tags": {},
      "type": "Microsoft.Compute/virtualMachines/extensions"
    }
  ],
  "outputs": {
    "masterFQDN": {
      "type": "string",
      "value": ""
    },
    "primaryAvailabilitySetName": {
      "type": "string",
      "value": "[variables('primaryAvailabilitySetName')]"
    },
    "primaryScaleSetName": {
      "type": "string",
      "value": "[variables('primaryScaleSetName')]"
    },
    "resourceGroup": {
      "type": "string",
      "value": "[variables('resourceGroup')]"
    },
    "routeTableName": {
      "type": "string",
      "value": "[variables('routeTableName')]"
    },
    "securityGroupName": {
      "type": "string",
      "value": "[variables('nsgName')]"
    },
    "subnetName": {
      "type": "string",
      "value": "[variables('subnetName')]"
    },
    "virtualNetworkName": {
      "type": "string",
      "value": "[variables('virtualNetworkName')]"
    },
    "vnetResourceGroup": {
      "type": "string",
      "value": "[variables('virtualNetworkResourceGroupName')]"
    }
  }
}
